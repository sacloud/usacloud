// Code generated by 'github.com/sacloud/usacloud/tools/gen-command-completion'; DO NOT EDIT

package command

import (
	"fmt"
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/schema"
)

func PacketFilterRuleUpdateCompleteFlags(ctx Context, params *RuleUpdatePacketFilterParam, flagName string, currentValue string) {
	var comp schema.SchemaCompletionFunc

	switch flagName {
	case "action":
		comp = define.Resources["PacketFilter"].Commands["rule-update"].Params["action"].CompleteFunc
	case "description", "desc":
		comp = define.Resources["PacketFilter"].Commands["rule-update"].Params["description"].CompleteFunc
	case "destination-port", "dest-port":
		comp = define.Resources["PacketFilter"].Commands["rule-update"].Params["destination-port"].CompleteFunc
	case "id":
		comp = define.Resources["PacketFilter"].Commands["rule-update"].Params["id"].CompleteFunc
	case "index":
		comp = define.Resources["PacketFilter"].Commands["rule-update"].Params["index"].CompleteFunc
	case "protocol":
		comp = define.Resources["PacketFilter"].Commands["rule-update"].Params["protocol"].CompleteFunc
	case "source-network":
		comp = define.Resources["PacketFilter"].Commands["rule-update"].Params["source-network"].CompleteFunc
	case "source-port":
		comp = define.Resources["PacketFilter"].Commands["rule-update"].Params["source-port"].CompleteFunc
	}

	if comp != nil {
		words := comp(ctx, currentValue)
		for _, w := range words {
			fmt.Println(w)
		}
	}
}
