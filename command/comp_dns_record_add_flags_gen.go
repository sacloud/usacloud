// Code generated by 'github.com/sacloud/usacloud/tools/gen-command-completion'; DO NOT EDIT

package command

import (
	"fmt"
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/schema"
)

func DNSRecordAddCompleteFlags(ctx Context, params *RecordAddDNSParam, flagName string, currentValue string) {
	var comp schema.SchemaCompletionFunc

	switch flagName {
	case "id":
		comp = define.Resources["DNS"].Commands["record-add"].Params["id"].CompleteFunc
	case "mx-priority":
		comp = define.Resources["DNS"].Commands["record-add"].Params["mx-priority"].CompleteFunc
	case "name":
		comp = define.Resources["DNS"].Commands["record-add"].Params["name"].CompleteFunc
	case "srv-port":
		comp = define.Resources["DNS"].Commands["record-add"].Params["srv-port"].CompleteFunc
	case "srv-priority":
		comp = define.Resources["DNS"].Commands["record-add"].Params["srv-priority"].CompleteFunc
	case "srv-target":
		comp = define.Resources["DNS"].Commands["record-add"].Params["srv-target"].CompleteFunc
	case "srv-weight":
		comp = define.Resources["DNS"].Commands["record-add"].Params["srv-weight"].CompleteFunc
	case "ttl":
		comp = define.Resources["DNS"].Commands["record-add"].Params["ttl"].CompleteFunc
	case "type":
		comp = define.Resources["DNS"].Commands["record-add"].Params["type"].CompleteFunc
	case "value":
		comp = define.Resources["DNS"].Commands["record-add"].Params["value"].CompleteFunc
	}

	if comp != nil {
		words := comp(ctx, currentValue)
		for _, w := range words {
			fmt.Println(w)
		}
	}
}
