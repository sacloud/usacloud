// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'github.com/sacloud/usacloud/tools/gen-input-models'; DO NOT EDIT

package params

import (
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/output"
	"github.com/sacloud/usacloud/schema"
)

// ListObjectStorageParam is input parameters for the sacloud API
type ListObjectStorageParam struct {
	AccessKey         string   `json:"access-key"`
	SecretKey         string   `json:"secret-key"`
	Bucket            string   `json:"bucket"`
	ParamTemplate     string   `json:"param-template"`
	Parameters        string   `json:"parameters"`
	ParamTemplateFile string   `json:"param-template-file"`
	ParameterFile     string   `json:"parameter-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	OutputType        string   `json:"output-type"`
	Column            []string `json:"column"`
	Quiet             bool     `json:"quiet"`
	Format            string   `json:"format"`
	FormatFile        string   `json:"format-file"`
	Query             string   `json:"query"`
	QueryFile         string   `json:"query-file"`
}

// NewListObjectStorageParam return new ListObjectStorageParam
func NewListObjectStorageParam() *ListObjectStorageParam {
	return &ListObjectStorageParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *ListObjectStorageParam) FillValueToSkeleton() {
	if isEmpty(p.AccessKey) {
		p.AccessKey = ""
	}
	if isEmpty(p.SecretKey) {
		p.SecretKey = ""
	}
	if isEmpty(p.Bucket) {
		p.Bucket = ""
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.Parameters) {
		p.Parameters = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.ParameterFile) {
		p.ParameterFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.OutputType) {
		p.OutputType = ""
	}
	if isEmpty(p.Column) {
		p.Column = []string{""}
	}
	if isEmpty(p.Quiet) {
		p.Quiet = false
	}
	if isEmpty(p.Format) {
		p.Format = ""
	}
	if isEmpty(p.FormatFile) {
		p.FormatFile = ""
	}
	if isEmpty(p.Query) {
		p.Query = ""
	}
	if isEmpty(p.QueryFile) {
		p.QueryFile = ""
	}

}

// Validate checks current values in model
func (p *ListObjectStorageParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--access-key", p.AccessKey)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateRequired
		errs := validator("--secret-key", p.SecretKey)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues(define.AllowOutputTypes...)
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateInputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *ListObjectStorageParam) GetResourceDef() *schema.Resource {
	return define.Resources["ObjectStorage"]
}

func (p *ListObjectStorageParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["list"]
}

func (p *ListObjectStorageParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *ListObjectStorageParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *ListObjectStorageParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *ListObjectStorageParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *ListObjectStorageParam) SetAccessKey(v string) {
	p.AccessKey = v
}

func (p *ListObjectStorageParam) GetAccessKey() string {
	return p.AccessKey
}
func (p *ListObjectStorageParam) SetSecretKey(v string) {
	p.SecretKey = v
}

func (p *ListObjectStorageParam) GetSecretKey() string {
	return p.SecretKey
}
func (p *ListObjectStorageParam) SetBucket(v string) {
	p.Bucket = v
}

func (p *ListObjectStorageParam) GetBucket() string {
	return p.Bucket
}
func (p *ListObjectStorageParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *ListObjectStorageParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *ListObjectStorageParam) SetParameters(v string) {
	p.Parameters = v
}

func (p *ListObjectStorageParam) GetParameters() string {
	return p.Parameters
}
func (p *ListObjectStorageParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *ListObjectStorageParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *ListObjectStorageParam) SetParameterFile(v string) {
	p.ParameterFile = v
}

func (p *ListObjectStorageParam) GetParameterFile() string {
	return p.ParameterFile
}
func (p *ListObjectStorageParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *ListObjectStorageParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *ListObjectStorageParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *ListObjectStorageParam) GetOutputType() string {
	return p.OutputType
}
func (p *ListObjectStorageParam) SetColumn(v []string) {
	p.Column = v
}

func (p *ListObjectStorageParam) GetColumn() []string {
	return p.Column
}
func (p *ListObjectStorageParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *ListObjectStorageParam) GetQuiet() bool {
	return p.Quiet
}
func (p *ListObjectStorageParam) SetFormat(v string) {
	p.Format = v
}

func (p *ListObjectStorageParam) GetFormat() string {
	return p.Format
}
func (p *ListObjectStorageParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *ListObjectStorageParam) GetFormatFile() string {
	return p.FormatFile
}
func (p *ListObjectStorageParam) SetQuery(v string) {
	p.Query = v
}

func (p *ListObjectStorageParam) GetQuery() string {
	return p.Query
}
func (p *ListObjectStorageParam) SetQueryFile(v string) {
	p.QueryFile = v
}

func (p *ListObjectStorageParam) GetQueryFile() string {
	return p.QueryFile
}

// PutObjectStorageParam is input parameters for the sacloud API
type PutObjectStorageParam struct {
	AccessKey         string `json:"access-key"`
	ContentType       string `json:"content-type"`
	Recursive         bool   `json:"recursive"`
	SecretKey         string `json:"secret-key"`
	Bucket            string `json:"bucket"`
	Assumeyes         bool   `json:"assumeyes"`
	ParamTemplate     string `json:"param-template"`
	Parameters        string `json:"parameters"`
	ParamTemplateFile string `json:"param-template-file"`
	ParameterFile     string `json:"parameter-file"`
	GenerateSkeleton  bool   `json:"generate-skeleton"`
}

// NewPutObjectStorageParam return new PutObjectStorageParam
func NewPutObjectStorageParam() *PutObjectStorageParam {
	return &PutObjectStorageParam{

		ContentType: "application/octet-stream",
	}
}

// FillValueToSkeleton fill values to empty fields
func (p *PutObjectStorageParam) FillValueToSkeleton() {
	if isEmpty(p.AccessKey) {
		p.AccessKey = ""
	}
	if isEmpty(p.ContentType) {
		p.ContentType = ""
	}
	if isEmpty(p.Recursive) {
		p.Recursive = false
	}
	if isEmpty(p.SecretKey) {
		p.SecretKey = ""
	}
	if isEmpty(p.Bucket) {
		p.Bucket = ""
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.Parameters) {
		p.Parameters = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.ParameterFile) {
		p.ParameterFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}

}

// Validate checks current values in model
func (p *PutObjectStorageParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--access-key", p.AccessKey)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateRequired
		errs := validator("--secret-key", p.SecretKey)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *PutObjectStorageParam) GetResourceDef() *schema.Resource {
	return define.Resources["ObjectStorage"]
}

func (p *PutObjectStorageParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["put"]
}

func (p *PutObjectStorageParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *PutObjectStorageParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *PutObjectStorageParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *PutObjectStorageParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *PutObjectStorageParam) SetAccessKey(v string) {
	p.AccessKey = v
}

func (p *PutObjectStorageParam) GetAccessKey() string {
	return p.AccessKey
}
func (p *PutObjectStorageParam) SetContentType(v string) {
	p.ContentType = v
}

func (p *PutObjectStorageParam) GetContentType() string {
	return p.ContentType
}
func (p *PutObjectStorageParam) SetRecursive(v bool) {
	p.Recursive = v
}

func (p *PutObjectStorageParam) GetRecursive() bool {
	return p.Recursive
}
func (p *PutObjectStorageParam) SetSecretKey(v string) {
	p.SecretKey = v
}

func (p *PutObjectStorageParam) GetSecretKey() string {
	return p.SecretKey
}
func (p *PutObjectStorageParam) SetBucket(v string) {
	p.Bucket = v
}

func (p *PutObjectStorageParam) GetBucket() string {
	return p.Bucket
}
func (p *PutObjectStorageParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *PutObjectStorageParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *PutObjectStorageParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *PutObjectStorageParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *PutObjectStorageParam) SetParameters(v string) {
	p.Parameters = v
}

func (p *PutObjectStorageParam) GetParameters() string {
	return p.Parameters
}
func (p *PutObjectStorageParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *PutObjectStorageParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *PutObjectStorageParam) SetParameterFile(v string) {
	p.ParameterFile = v
}

func (p *PutObjectStorageParam) GetParameterFile() string {
	return p.ParameterFile
}
func (p *PutObjectStorageParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *PutObjectStorageParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}

// GetObjectStorageParam is input parameters for the sacloud API
type GetObjectStorageParam struct {
	AccessKey         string `json:"access-key"`
	Recursive         bool   `json:"recursive"`
	SecretKey         string `json:"secret-key"`
	Bucket            string `json:"bucket"`
	ParamTemplate     string `json:"param-template"`
	Parameters        string `json:"parameters"`
	ParamTemplateFile string `json:"param-template-file"`
	ParameterFile     string `json:"parameter-file"`
	GenerateSkeleton  bool   `json:"generate-skeleton"`
}

// NewGetObjectStorageParam return new GetObjectStorageParam
func NewGetObjectStorageParam() *GetObjectStorageParam {
	return &GetObjectStorageParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *GetObjectStorageParam) FillValueToSkeleton() {
	if isEmpty(p.AccessKey) {
		p.AccessKey = ""
	}
	if isEmpty(p.Recursive) {
		p.Recursive = false
	}
	if isEmpty(p.SecretKey) {
		p.SecretKey = ""
	}
	if isEmpty(p.Bucket) {
		p.Bucket = ""
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.Parameters) {
		p.Parameters = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.ParameterFile) {
		p.ParameterFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}

}

// Validate checks current values in model
func (p *GetObjectStorageParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--access-key", p.AccessKey)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateRequired
		errs := validator("--secret-key", p.SecretKey)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *GetObjectStorageParam) GetResourceDef() *schema.Resource {
	return define.Resources["ObjectStorage"]
}

func (p *GetObjectStorageParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["get"]
}

func (p *GetObjectStorageParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *GetObjectStorageParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *GetObjectStorageParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *GetObjectStorageParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *GetObjectStorageParam) SetAccessKey(v string) {
	p.AccessKey = v
}

func (p *GetObjectStorageParam) GetAccessKey() string {
	return p.AccessKey
}
func (p *GetObjectStorageParam) SetRecursive(v bool) {
	p.Recursive = v
}

func (p *GetObjectStorageParam) GetRecursive() bool {
	return p.Recursive
}
func (p *GetObjectStorageParam) SetSecretKey(v string) {
	p.SecretKey = v
}

func (p *GetObjectStorageParam) GetSecretKey() string {
	return p.SecretKey
}
func (p *GetObjectStorageParam) SetBucket(v string) {
	p.Bucket = v
}

func (p *GetObjectStorageParam) GetBucket() string {
	return p.Bucket
}
func (p *GetObjectStorageParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *GetObjectStorageParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *GetObjectStorageParam) SetParameters(v string) {
	p.Parameters = v
}

func (p *GetObjectStorageParam) GetParameters() string {
	return p.Parameters
}
func (p *GetObjectStorageParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *GetObjectStorageParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *GetObjectStorageParam) SetParameterFile(v string) {
	p.ParameterFile = v
}

func (p *GetObjectStorageParam) GetParameterFile() string {
	return p.ParameterFile
}
func (p *GetObjectStorageParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *GetObjectStorageParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}

// DeleteObjectStorageParam is input parameters for the sacloud API
type DeleteObjectStorageParam struct {
	AccessKey         string `json:"access-key"`
	Recursive         bool   `json:"recursive"`
	SecretKey         string `json:"secret-key"`
	Bucket            string `json:"bucket"`
	Assumeyes         bool   `json:"assumeyes"`
	ParamTemplate     string `json:"param-template"`
	Parameters        string `json:"parameters"`
	ParamTemplateFile string `json:"param-template-file"`
	ParameterFile     string `json:"parameter-file"`
	GenerateSkeleton  bool   `json:"generate-skeleton"`
}

// NewDeleteObjectStorageParam return new DeleteObjectStorageParam
func NewDeleteObjectStorageParam() *DeleteObjectStorageParam {
	return &DeleteObjectStorageParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *DeleteObjectStorageParam) FillValueToSkeleton() {
	if isEmpty(p.AccessKey) {
		p.AccessKey = ""
	}
	if isEmpty(p.Recursive) {
		p.Recursive = false
	}
	if isEmpty(p.SecretKey) {
		p.SecretKey = ""
	}
	if isEmpty(p.Bucket) {
		p.Bucket = ""
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.Parameters) {
		p.Parameters = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.ParameterFile) {
		p.ParameterFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}

}

// Validate checks current values in model
func (p *DeleteObjectStorageParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--access-key", p.AccessKey)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateRequired
		errs := validator("--secret-key", p.SecretKey)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *DeleteObjectStorageParam) GetResourceDef() *schema.Resource {
	return define.Resources["ObjectStorage"]
}

func (p *DeleteObjectStorageParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["delete"]
}

func (p *DeleteObjectStorageParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *DeleteObjectStorageParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *DeleteObjectStorageParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *DeleteObjectStorageParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *DeleteObjectStorageParam) SetAccessKey(v string) {
	p.AccessKey = v
}

func (p *DeleteObjectStorageParam) GetAccessKey() string {
	return p.AccessKey
}
func (p *DeleteObjectStorageParam) SetRecursive(v bool) {
	p.Recursive = v
}

func (p *DeleteObjectStorageParam) GetRecursive() bool {
	return p.Recursive
}
func (p *DeleteObjectStorageParam) SetSecretKey(v string) {
	p.SecretKey = v
}

func (p *DeleteObjectStorageParam) GetSecretKey() string {
	return p.SecretKey
}
func (p *DeleteObjectStorageParam) SetBucket(v string) {
	p.Bucket = v
}

func (p *DeleteObjectStorageParam) GetBucket() string {
	return p.Bucket
}
func (p *DeleteObjectStorageParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *DeleteObjectStorageParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *DeleteObjectStorageParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *DeleteObjectStorageParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *DeleteObjectStorageParam) SetParameters(v string) {
	p.Parameters = v
}

func (p *DeleteObjectStorageParam) GetParameters() string {
	return p.Parameters
}
func (p *DeleteObjectStorageParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *DeleteObjectStorageParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *DeleteObjectStorageParam) SetParameterFile(v string) {
	p.ParameterFile = v
}

func (p *DeleteObjectStorageParam) GetParameterFile() string {
	return p.ParameterFile
}
func (p *DeleteObjectStorageParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *DeleteObjectStorageParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
