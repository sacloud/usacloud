// Code generated by 'github.com/sacloud/usacloud/tools/gen-input-models'; DO NOT EDIT

package command

import (
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/output"
	"github.com/sacloud/usacloud/schema"
)

// UpdateISOImageParam is input parameters for the sacloud API
type UpdateISOImageParam struct {
	Id          int64
	Name        string
	Description string
	Tags        []string
	Icon        int64
}

// NewUpdateISOImageParam return new UpdateISOImageParam
func NewUpdateISOImageParam() *UpdateISOImageParam {
	return &UpdateISOImageParam{}
}

// Validate checks current values in model
func (p *UpdateISOImageParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["ISOImage"].Commands["update"].Params["id"].ValidateFunc
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["ISOImage"].Commands["update"].Params["name"].ValidateFunc
		errs := validator("--name", p.Name)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["ISOImage"].Commands["update"].Params["description"].ValidateFunc
		errs := validator("--description", p.Description)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["ISOImage"].Commands["update"].Params["tags"].ValidateFunc
		errs := validator("--tags", p.Tags)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["ISOImage"].Commands["update"].Params["icon"].ValidateFunc
		errs := validator("--icon", p.Icon)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *UpdateISOImageParam) getResourceDef() *schema.Resource {
	return define.Resources["ISOImage"]
}

func (p *UpdateISOImageParam) getCommandDef() *schema.Command {
	return p.getResourceDef().Commands["update"]
}

func (p *UpdateISOImageParam) GetIncludeFields() []string {
	return p.getCommandDef().IncludeFields
}

func (p *UpdateISOImageParam) GetExcludeFields() []string {
	return p.getCommandDef().ExcludeFields
}

func (p *UpdateISOImageParam) GetTableType() output.OutputTableType {
	return p.getCommandDef().TableType
}

func (p *UpdateISOImageParam) GetColumnDefs() []output.ColumnDef {
	return p.getCommandDef().TableColumnDefines
}

func (p *UpdateISOImageParam) SetId(v int64) {
	p.Id = v
}

func (p *UpdateISOImageParam) GetId() int64 {
	return p.Id
}
func (p *UpdateISOImageParam) SetName(v string) {
	p.Name = v
}

func (p *UpdateISOImageParam) GetName() string {
	return p.Name
}
func (p *UpdateISOImageParam) SetDescription(v string) {
	p.Description = v
}

func (p *UpdateISOImageParam) GetDescription() string {
	return p.Description
}
func (p *UpdateISOImageParam) SetTags(v []string) {
	p.Tags = v
}

func (p *UpdateISOImageParam) GetTags() []string {
	return p.Tags
}
func (p *UpdateISOImageParam) SetIcon(v int64) {
	p.Icon = v
}

func (p *UpdateISOImageParam) GetIcon() int64 {
	return p.Icon
}
