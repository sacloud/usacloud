// Code generated by 'github.com/sacloud/usacloud/tools/gen-command-completion'; DO NOT EDIT

package command

import (
	"fmt"
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/schema"
)

func InternetCreateCompleteFlags(ctx Context, params *CreateInternetParam, flagName string, currentValue string) {
	var comp schema.SchemaCompletionFunc

	switch flagName {
	case "band-width":
		comp = define.Resources["Internet"].Commands["create"].Params["band-width"].CompleteFunc
	case "description", "desc":
		comp = define.Resources["Internet"].Commands["create"].Params["description"].CompleteFunc
	case "icon-id":
		comp = define.Resources["Internet"].Commands["create"].Params["icon-id"].CompleteFunc
	case "name":
		comp = define.Resources["Internet"].Commands["create"].Params["name"].CompleteFunc
	case "nw-masklen", "network-masklen":
		comp = define.Resources["Internet"].Commands["create"].Params["nw-masklen"].CompleteFunc
	case "tags":
		comp = define.Resources["Internet"].Commands["create"].Params["tags"].CompleteFunc
	}

	if comp != nil {
		words := comp(ctx, currentValue)
		for _, w := range words {
			fmt.Println(w)
		}
	}
}
