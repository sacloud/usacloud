// Code generated by 'github.com/sacloud/usacloud/tools/gen-input-models'; DO NOT EDIT

package command

import (
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/output"
	"github.com/sacloud/usacloud/schema"
)

// FtpOpenISOImageParam is input parameters for the sacloud API
type FtpOpenISOImageParam struct {
	Id int64
}

// NewFtpOpenISOImageParam return new FtpOpenISOImageParam
func NewFtpOpenISOImageParam() *FtpOpenISOImageParam {
	return &FtpOpenISOImageParam{}
}

// Validate checks current values in model
func (p *FtpOpenISOImageParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["ISOImage"].Commands["ftp-open"].Params["id"].ValidateFunc
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *FtpOpenISOImageParam) getResourceDef() *schema.Resource {
	return define.Resources["ISOImage"]
}

func (p *FtpOpenISOImageParam) getCommandDef() *schema.Command {
	return p.getResourceDef().Commands["ftp-open"]
}

func (p *FtpOpenISOImageParam) GetIncludeFields() []string {
	return p.getCommandDef().IncludeFields
}

func (p *FtpOpenISOImageParam) GetExcludeFields() []string {
	return p.getCommandDef().ExcludeFields
}

func (p *FtpOpenISOImageParam) GetTableType() output.OutputTableType {
	return p.getCommandDef().TableType
}

func (p *FtpOpenISOImageParam) GetColumnDefs() []output.ColumnDef {
	return p.getCommandDef().TableColumnDefines
}

func (p *FtpOpenISOImageParam) SetId(v int64) {
	p.Id = v
}

func (p *FtpOpenISOImageParam) GetId() int64 {
	return p.Id
}
