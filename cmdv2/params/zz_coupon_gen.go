// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'github.com/sacloud/usacloud/tools/gen-input-models'; DO NOT EDIT

package params

import (
	"io"

	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/output"
	"github.com/sacloud/usacloud/pkg/utils"
	"github.com/sacloud/usacloud/schema"
)

// ListCouponParam is input parameters for the sacloud API
type ListCouponParam struct {
	Usable bool

	input Input
}

// NewListCouponParam return new ListCouponParam
func NewListCouponParam() *ListCouponParam {
	return &ListCouponParam{}
}

// Initialize init ListCouponParam
func (p *ListCouponParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *ListCouponParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *ListCouponParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Usable) {
		p.Usable = false
	}

}

func (p *ListCouponParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *ListCouponParam) ResourceDef() *schema.Resource {
	return define.Resources["Coupon"]
}

func (p *ListCouponParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["list"]
}

func (p *ListCouponParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *ListCouponParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *ListCouponParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *ListCouponParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *ListCouponParam) SetUsable(v bool) {
	p.Usable = v
}

func (p *ListCouponParam) GetUsable() bool {
	return p.Usable
}
