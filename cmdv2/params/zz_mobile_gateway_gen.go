// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'github.com/sacloud/usacloud/tools/gen-input-models'; DO NOT EDIT

package params

import (
	"io"

	"github.com/sacloud/libsacloud/sacloud"
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/output"
	"github.com/sacloud/usacloud/pkg/utils"
	"github.com/sacloud/usacloud/pkg/validation"
	"github.com/sacloud/usacloud/schema"
)

// ListMobileGatewayParam is input parameters for the sacloud API
type ListMobileGatewayParam struct {
	Name []string
	Id   []sacloud.ID
	From int
	Max  int
	Sort []string
	Tags []string

	input Input
}

// NewListMobileGatewayParam return new ListMobileGatewayParam
func NewListMobileGatewayParam() *ListMobileGatewayParam {
	return &ListMobileGatewayParam{}
}

// Initialize init ListMobileGatewayParam
func (p *ListMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *ListMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *ListMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Name) {
		p.Name = []string{""}
	}
	if utils.IsEmpty(p.Id) {
		p.Id = []sacloud.ID{}
	}
	if utils.IsEmpty(p.From) {
		p.From = 0
	}
	if utils.IsEmpty(p.Max) {
		p.Max = 0
	}
	if utils.IsEmpty(p.Sort) {
		p.Sort = []string{""}
	}
	if utils.IsEmpty(p.Tags) {
		p.Tags = []string{""}
	}

}

func (p *ListMobileGatewayParam) validate() error {
	var errors []error

	{
		errs := validation.ConflictsWith("--name", p.Name, map[string]interface{}{

			"--id": p.Id,
		})
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["list"].Params["id"].ValidateFunc
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validation.ConflictsWith("--id", p.Id, map[string]interface{}{

			"--name": p.Name,
		})
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["list"].Params["tags"].ValidateFunc
		errs := validator("--tags", p.Tags)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *ListMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ListMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["list"]
}

func (p *ListMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *ListMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *ListMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *ListMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *ListMobileGatewayParam) SetName(v []string) {
	p.Name = v
}

func (p *ListMobileGatewayParam) GetName() []string {
	return p.Name
}
func (p *ListMobileGatewayParam) SetId(v []sacloud.ID) {
	p.Id = v
}

func (p *ListMobileGatewayParam) GetId() []sacloud.ID {
	return p.Id
}
func (p *ListMobileGatewayParam) SetFrom(v int) {
	p.From = v
}

func (p *ListMobileGatewayParam) GetFrom() int {
	return p.From
}
func (p *ListMobileGatewayParam) SetMax(v int) {
	p.Max = v
}

func (p *ListMobileGatewayParam) GetMax() int {
	return p.Max
}
func (p *ListMobileGatewayParam) SetSort(v []string) {
	p.Sort = v
}

func (p *ListMobileGatewayParam) GetSort() []string {
	return p.Sort
}
func (p *ListMobileGatewayParam) SetTags(v []string) {
	p.Tags = v
}

func (p *ListMobileGatewayParam) GetTags() []string {
	return p.Tags
}

// CreateMobileGatewayParam is input parameters for the sacloud API
type CreateMobileGatewayParam struct {
	Name               string
	Description        string
	Tags               []string
	IconId             sacloud.ID
	InternetConnection bool

	input Input
}

// NewCreateMobileGatewayParam return new CreateMobileGatewayParam
func NewCreateMobileGatewayParam() *CreateMobileGatewayParam {
	return &CreateMobileGatewayParam{}
}

// Initialize init CreateMobileGatewayParam
func (p *CreateMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *CreateMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *CreateMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Name) {
		p.Name = ""
	}
	if utils.IsEmpty(p.Description) {
		p.Description = ""
	}
	if utils.IsEmpty(p.Tags) {
		p.Tags = []string{""}
	}
	if utils.IsEmpty(p.IconId) {
		p.IconId = sacloud.ID(0)
	}
	if utils.IsEmpty(p.InternetConnection) {
		p.InternetConnection = false
	}

}

func (p *CreateMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--name", p.Name)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["create"].Params["name"].ValidateFunc
		errs := validator("--name", p.Name)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["create"].Params["description"].ValidateFunc
		errs := validator("--description", p.Description)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["create"].Params["tags"].ValidateFunc
		errs := validator("--tags", p.Tags)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["create"].Params["icon-id"].ValidateFunc
		errs := validator("--icon-id", p.IconId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *CreateMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *CreateMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["create"]
}

func (p *CreateMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *CreateMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *CreateMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *CreateMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *CreateMobileGatewayParam) SetName(v string) {
	p.Name = v
}

func (p *CreateMobileGatewayParam) GetName() string {
	return p.Name
}
func (p *CreateMobileGatewayParam) SetDescription(v string) {
	p.Description = v
}

func (p *CreateMobileGatewayParam) GetDescription() string {
	return p.Description
}
func (p *CreateMobileGatewayParam) SetTags(v []string) {
	p.Tags = v
}

func (p *CreateMobileGatewayParam) GetTags() []string {
	return p.Tags
}
func (p *CreateMobileGatewayParam) SetIconId(v sacloud.ID) {
	p.IconId = v
}

func (p *CreateMobileGatewayParam) GetIconId() sacloud.ID {
	return p.IconId
}
func (p *CreateMobileGatewayParam) SetInternetConnection(v bool) {
	p.InternetConnection = v
}

func (p *CreateMobileGatewayParam) GetInternetConnection() bool {
	return p.InternetConnection
}

// ReadMobileGatewayParam is input parameters for the sacloud API
type ReadMobileGatewayParam struct {
	input Input
}

// NewReadMobileGatewayParam return new ReadMobileGatewayParam
func NewReadMobileGatewayParam() *ReadMobileGatewayParam {
	return &ReadMobileGatewayParam{}
}

// Initialize init ReadMobileGatewayParam
func (p *ReadMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *ReadMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *ReadMobileGatewayParam) fillValueToSkeleton() {

}

func (p *ReadMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *ReadMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ReadMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["read"]
}

func (p *ReadMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *ReadMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *ReadMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *ReadMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// UpdateMobileGatewayParam is input parameters for the sacloud API
type UpdateMobileGatewayParam struct {
	Name               string
	Description        string
	Tags               []string
	IconId             sacloud.ID
	InternetConnection bool

	input Input
}

// NewUpdateMobileGatewayParam return new UpdateMobileGatewayParam
func NewUpdateMobileGatewayParam() *UpdateMobileGatewayParam {
	return &UpdateMobileGatewayParam{}
}

// Initialize init UpdateMobileGatewayParam
func (p *UpdateMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *UpdateMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *UpdateMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Name) {
		p.Name = ""
	}
	if utils.IsEmpty(p.Description) {
		p.Description = ""
	}
	if utils.IsEmpty(p.Tags) {
		p.Tags = []string{""}
	}
	if utils.IsEmpty(p.IconId) {
		p.IconId = sacloud.ID(0)
	}
	if utils.IsEmpty(p.InternetConnection) {
		p.InternetConnection = false
	}

}

func (p *UpdateMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := define.Resources["MobileGateway"].Commands["update"].Params["name"].ValidateFunc
		errs := validator("--name", p.Name)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["update"].Params["description"].ValidateFunc
		errs := validator("--description", p.Description)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["update"].Params["tags"].ValidateFunc
		errs := validator("--tags", p.Tags)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["update"].Params["icon-id"].ValidateFunc
		errs := validator("--icon-id", p.IconId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *UpdateMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *UpdateMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["update"]
}

func (p *UpdateMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *UpdateMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *UpdateMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *UpdateMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *UpdateMobileGatewayParam) SetName(v string) {
	p.Name = v
}

func (p *UpdateMobileGatewayParam) GetName() string {
	return p.Name
}
func (p *UpdateMobileGatewayParam) SetDescription(v string) {
	p.Description = v
}

func (p *UpdateMobileGatewayParam) GetDescription() string {
	return p.Description
}
func (p *UpdateMobileGatewayParam) SetTags(v []string) {
	p.Tags = v
}

func (p *UpdateMobileGatewayParam) GetTags() []string {
	return p.Tags
}
func (p *UpdateMobileGatewayParam) SetIconId(v sacloud.ID) {
	p.IconId = v
}

func (p *UpdateMobileGatewayParam) GetIconId() sacloud.ID {
	return p.IconId
}
func (p *UpdateMobileGatewayParam) SetInternetConnection(v bool) {
	p.InternetConnection = v
}

func (p *UpdateMobileGatewayParam) GetInternetConnection() bool {
	return p.InternetConnection
}

// DeleteMobileGatewayParam is input parameters for the sacloud API
type DeleteMobileGatewayParam struct {
	Force bool

	input Input
}

// NewDeleteMobileGatewayParam return new DeleteMobileGatewayParam
func NewDeleteMobileGatewayParam() *DeleteMobileGatewayParam {
	return &DeleteMobileGatewayParam{}
}

// Initialize init DeleteMobileGatewayParam
func (p *DeleteMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *DeleteMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *DeleteMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Force) {
		p.Force = false
	}

}

func (p *DeleteMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *DeleteMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *DeleteMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["delete"]
}

func (p *DeleteMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *DeleteMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *DeleteMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *DeleteMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *DeleteMobileGatewayParam) SetForce(v bool) {
	p.Force = v
}

func (p *DeleteMobileGatewayParam) GetForce() bool {
	return p.Force
}

// BootMobileGatewayParam is input parameters for the sacloud API
type BootMobileGatewayParam struct {
	input Input
}

// NewBootMobileGatewayParam return new BootMobileGatewayParam
func NewBootMobileGatewayParam() *BootMobileGatewayParam {
	return &BootMobileGatewayParam{}
}

// Initialize init BootMobileGatewayParam
func (p *BootMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *BootMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *BootMobileGatewayParam) fillValueToSkeleton() {

}

func (p *BootMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *BootMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *BootMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["boot"]
}

func (p *BootMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *BootMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *BootMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *BootMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// ShutdownMobileGatewayParam is input parameters for the sacloud API
type ShutdownMobileGatewayParam struct {
	input Input
}

// NewShutdownMobileGatewayParam return new ShutdownMobileGatewayParam
func NewShutdownMobileGatewayParam() *ShutdownMobileGatewayParam {
	return &ShutdownMobileGatewayParam{}
}

// Initialize init ShutdownMobileGatewayParam
func (p *ShutdownMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *ShutdownMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *ShutdownMobileGatewayParam) fillValueToSkeleton() {

}

func (p *ShutdownMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *ShutdownMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ShutdownMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["shutdown"]
}

func (p *ShutdownMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *ShutdownMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *ShutdownMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *ShutdownMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// ShutdownForceMobileGatewayParam is input parameters for the sacloud API
type ShutdownForceMobileGatewayParam struct {
	input Input
}

// NewShutdownForceMobileGatewayParam return new ShutdownForceMobileGatewayParam
func NewShutdownForceMobileGatewayParam() *ShutdownForceMobileGatewayParam {
	return &ShutdownForceMobileGatewayParam{}
}

// Initialize init ShutdownForceMobileGatewayParam
func (p *ShutdownForceMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *ShutdownForceMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *ShutdownForceMobileGatewayParam) fillValueToSkeleton() {

}

func (p *ShutdownForceMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *ShutdownForceMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ShutdownForceMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["shutdown-force"]
}

func (p *ShutdownForceMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *ShutdownForceMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *ShutdownForceMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *ShutdownForceMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// ResetMobileGatewayParam is input parameters for the sacloud API
type ResetMobileGatewayParam struct {
	input Input
}

// NewResetMobileGatewayParam return new ResetMobileGatewayParam
func NewResetMobileGatewayParam() *ResetMobileGatewayParam {
	return &ResetMobileGatewayParam{}
}

// Initialize init ResetMobileGatewayParam
func (p *ResetMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *ResetMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *ResetMobileGatewayParam) fillValueToSkeleton() {

}

func (p *ResetMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *ResetMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ResetMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["reset"]
}

func (p *ResetMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *ResetMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *ResetMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *ResetMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// WaitForBootMobileGatewayParam is input parameters for the sacloud API
type WaitForBootMobileGatewayParam struct {
	input Input
}

// NewWaitForBootMobileGatewayParam return new WaitForBootMobileGatewayParam
func NewWaitForBootMobileGatewayParam() *WaitForBootMobileGatewayParam {
	return &WaitForBootMobileGatewayParam{}
}

// Initialize init WaitForBootMobileGatewayParam
func (p *WaitForBootMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *WaitForBootMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *WaitForBootMobileGatewayParam) fillValueToSkeleton() {

}

func (p *WaitForBootMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *WaitForBootMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *WaitForBootMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["wait-for-boot"]
}

func (p *WaitForBootMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *WaitForBootMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *WaitForBootMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *WaitForBootMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// WaitForDownMobileGatewayParam is input parameters for the sacloud API
type WaitForDownMobileGatewayParam struct {
	input Input
}

// NewWaitForDownMobileGatewayParam return new WaitForDownMobileGatewayParam
func NewWaitForDownMobileGatewayParam() *WaitForDownMobileGatewayParam {
	return &WaitForDownMobileGatewayParam{}
}

// Initialize init WaitForDownMobileGatewayParam
func (p *WaitForDownMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *WaitForDownMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *WaitForDownMobileGatewayParam) fillValueToSkeleton() {

}

func (p *WaitForDownMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *WaitForDownMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *WaitForDownMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["wait-for-down"]
}

func (p *WaitForDownMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *WaitForDownMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *WaitForDownMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *WaitForDownMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// InterfaceInfoMobileGatewayParam is input parameters for the sacloud API
type InterfaceInfoMobileGatewayParam struct {
	input Input
}

// NewInterfaceInfoMobileGatewayParam return new InterfaceInfoMobileGatewayParam
func NewInterfaceInfoMobileGatewayParam() *InterfaceInfoMobileGatewayParam {
	return &InterfaceInfoMobileGatewayParam{}
}

// Initialize init InterfaceInfoMobileGatewayParam
func (p *InterfaceInfoMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *InterfaceInfoMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *InterfaceInfoMobileGatewayParam) fillValueToSkeleton() {

}

func (p *InterfaceInfoMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *InterfaceInfoMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *InterfaceInfoMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["interface-info"]
}

func (p *InterfaceInfoMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *InterfaceInfoMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *InterfaceInfoMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *InterfaceInfoMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// InterfaceConnectMobileGatewayParam is input parameters for the sacloud API
type InterfaceConnectMobileGatewayParam struct {
	SwitchId  sacloud.ID
	Ipaddress string
	NwMasklen int

	input Input
}

// NewInterfaceConnectMobileGatewayParam return new InterfaceConnectMobileGatewayParam
func NewInterfaceConnectMobileGatewayParam() *InterfaceConnectMobileGatewayParam {
	return &InterfaceConnectMobileGatewayParam{
		NwMasklen: 24}
}

// Initialize init InterfaceConnectMobileGatewayParam
func (p *InterfaceConnectMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *InterfaceConnectMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *InterfaceConnectMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.SwitchId) {
		p.SwitchId = sacloud.ID(0)
	}
	if utils.IsEmpty(p.Ipaddress) {
		p.Ipaddress = ""
	}
	if utils.IsEmpty(p.NwMasklen) {
		p.NwMasklen = 0
	}

}

func (p *InterfaceConnectMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--switch-id", p.SwitchId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["interface-connect"].Params["switch-id"].ValidateFunc
		errs := validator("--switch-id", p.SwitchId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := validateRequired
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["interface-connect"].Params["ipaddress"].ValidateFunc
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["interface-connect"].Params["nw-masklen"].ValidateFunc
		errs := validator("--nw-masklen", p.NwMasklen)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *InterfaceConnectMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *InterfaceConnectMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["interface-connect"]
}

func (p *InterfaceConnectMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *InterfaceConnectMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *InterfaceConnectMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *InterfaceConnectMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *InterfaceConnectMobileGatewayParam) SetSwitchId(v sacloud.ID) {
	p.SwitchId = v
}

func (p *InterfaceConnectMobileGatewayParam) GetSwitchId() sacloud.ID {
	return p.SwitchId
}
func (p *InterfaceConnectMobileGatewayParam) SetIpaddress(v string) {
	p.Ipaddress = v
}

func (p *InterfaceConnectMobileGatewayParam) GetIpaddress() string {
	return p.Ipaddress
}
func (p *InterfaceConnectMobileGatewayParam) SetNwMasklen(v int) {
	p.NwMasklen = v
}

func (p *InterfaceConnectMobileGatewayParam) GetNwMasklen() int {
	return p.NwMasklen
}

// InterfaceUpdateMobileGatewayParam is input parameters for the sacloud API
type InterfaceUpdateMobileGatewayParam struct {
	Ipaddress string
	NwMasklen int

	input Input
}

// NewInterfaceUpdateMobileGatewayParam return new InterfaceUpdateMobileGatewayParam
func NewInterfaceUpdateMobileGatewayParam() *InterfaceUpdateMobileGatewayParam {
	return &InterfaceUpdateMobileGatewayParam{
		NwMasklen: 24}
}

// Initialize init InterfaceUpdateMobileGatewayParam
func (p *InterfaceUpdateMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *InterfaceUpdateMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *InterfaceUpdateMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Ipaddress) {
		p.Ipaddress = ""
	}
	if utils.IsEmpty(p.NwMasklen) {
		p.NwMasklen = 0
	}

}

func (p *InterfaceUpdateMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := define.Resources["MobileGateway"].Commands["interface-update"].Params["ipaddress"].ValidateFunc
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["interface-update"].Params["nw-masklen"].ValidateFunc
		errs := validator("--nw-masklen", p.NwMasklen)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *InterfaceUpdateMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *InterfaceUpdateMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["interface-update"]
}

func (p *InterfaceUpdateMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *InterfaceUpdateMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *InterfaceUpdateMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *InterfaceUpdateMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *InterfaceUpdateMobileGatewayParam) SetIpaddress(v string) {
	p.Ipaddress = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetIpaddress() string {
	return p.Ipaddress
}
func (p *InterfaceUpdateMobileGatewayParam) SetNwMasklen(v int) {
	p.NwMasklen = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetNwMasklen() int {
	return p.NwMasklen
}

// InterfaceDisconnectMobileGatewayParam is input parameters for the sacloud API
type InterfaceDisconnectMobileGatewayParam struct {
	input Input
}

// NewInterfaceDisconnectMobileGatewayParam return new InterfaceDisconnectMobileGatewayParam
func NewInterfaceDisconnectMobileGatewayParam() *InterfaceDisconnectMobileGatewayParam {
	return &InterfaceDisconnectMobileGatewayParam{}
}

// Initialize init InterfaceDisconnectMobileGatewayParam
func (p *InterfaceDisconnectMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *InterfaceDisconnectMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *InterfaceDisconnectMobileGatewayParam) fillValueToSkeleton() {

}

func (p *InterfaceDisconnectMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *InterfaceDisconnectMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *InterfaceDisconnectMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["interface-disconnect"]
}

func (p *InterfaceDisconnectMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *InterfaceDisconnectMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *InterfaceDisconnectMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *InterfaceDisconnectMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// TrafficControlInfoMobileGatewayParam is input parameters for the sacloud API
type TrafficControlInfoMobileGatewayParam struct {
	input Input
}

// NewTrafficControlInfoMobileGatewayParam return new TrafficControlInfoMobileGatewayParam
func NewTrafficControlInfoMobileGatewayParam() *TrafficControlInfoMobileGatewayParam {
	return &TrafficControlInfoMobileGatewayParam{}
}

// Initialize init TrafficControlInfoMobileGatewayParam
func (p *TrafficControlInfoMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *TrafficControlInfoMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *TrafficControlInfoMobileGatewayParam) fillValueToSkeleton() {

}

func (p *TrafficControlInfoMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *TrafficControlInfoMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *TrafficControlInfoMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["traffic-control-info"]
}

func (p *TrafficControlInfoMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *TrafficControlInfoMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *TrafficControlInfoMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *TrafficControlInfoMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// TrafficControlEnableMobileGatewayParam is input parameters for the sacloud API
type TrafficControlEnableMobileGatewayParam struct {
	SlackWebhookUrl    string
	AutoTrafficShaping bool
	Quota              int
	BandWidthLimit     int
	EnableEmail        bool

	input Input
}

// NewTrafficControlEnableMobileGatewayParam return new TrafficControlEnableMobileGatewayParam
func NewTrafficControlEnableMobileGatewayParam() *TrafficControlEnableMobileGatewayParam {
	return &TrafficControlEnableMobileGatewayParam{
		Quota: 512}
}

// Initialize init TrafficControlEnableMobileGatewayParam
func (p *TrafficControlEnableMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *TrafficControlEnableMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *TrafficControlEnableMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.SlackWebhookUrl) {
		p.SlackWebhookUrl = ""
	}
	if utils.IsEmpty(p.AutoTrafficShaping) {
		p.AutoTrafficShaping = false
	}
	if utils.IsEmpty(p.Quota) {
		p.Quota = 0
	}
	if utils.IsEmpty(p.BandWidthLimit) {
		p.BandWidthLimit = 0
	}
	if utils.IsEmpty(p.EnableEmail) {
		p.EnableEmail = false
	}

}

func (p *TrafficControlEnableMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := define.Resources["MobileGateway"].Commands["traffic-control-enable"].Params["slack-webhook-url"].ValidateFunc
		errs := validator("--slack-webhook-url", p.SlackWebhookUrl)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := validateRequired
		errs := validator("--quota", p.Quota)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["traffic-control-enable"].Params["quota"].ValidateFunc
		errs := validator("--quota", p.Quota)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["traffic-control-enable"].Params["band-width-limit"].ValidateFunc
		errs := validator("--band-width-limit", p.BandWidthLimit)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *TrafficControlEnableMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *TrafficControlEnableMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["traffic-control-enable"]
}

func (p *TrafficControlEnableMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *TrafficControlEnableMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *TrafficControlEnableMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *TrafficControlEnableMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *TrafficControlEnableMobileGatewayParam) SetSlackWebhookUrl(v string) {
	p.SlackWebhookUrl = v
}

func (p *TrafficControlEnableMobileGatewayParam) GetSlackWebhookUrl() string {
	return p.SlackWebhookUrl
}
func (p *TrafficControlEnableMobileGatewayParam) SetAutoTrafficShaping(v bool) {
	p.AutoTrafficShaping = v
}

func (p *TrafficControlEnableMobileGatewayParam) GetAutoTrafficShaping() bool {
	return p.AutoTrafficShaping
}
func (p *TrafficControlEnableMobileGatewayParam) SetQuota(v int) {
	p.Quota = v
}

func (p *TrafficControlEnableMobileGatewayParam) GetQuota() int {
	return p.Quota
}
func (p *TrafficControlEnableMobileGatewayParam) SetBandWidthLimit(v int) {
	p.BandWidthLimit = v
}

func (p *TrafficControlEnableMobileGatewayParam) GetBandWidthLimit() int {
	return p.BandWidthLimit
}
func (p *TrafficControlEnableMobileGatewayParam) SetEnableEmail(v bool) {
	p.EnableEmail = v
}

func (p *TrafficControlEnableMobileGatewayParam) GetEnableEmail() bool {
	return p.EnableEmail
}

// TrafficControlUpdateMobileGatewayParam is input parameters for the sacloud API
type TrafficControlUpdateMobileGatewayParam struct {
	Quota              int
	BandWidthLimit     int
	EnableEmail        bool
	SlackWebhookUrl    string
	AutoTrafficShaping bool

	input Input
}

// NewTrafficControlUpdateMobileGatewayParam return new TrafficControlUpdateMobileGatewayParam
func NewTrafficControlUpdateMobileGatewayParam() *TrafficControlUpdateMobileGatewayParam {
	return &TrafficControlUpdateMobileGatewayParam{}
}

// Initialize init TrafficControlUpdateMobileGatewayParam
func (p *TrafficControlUpdateMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *TrafficControlUpdateMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *TrafficControlUpdateMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Quota) {
		p.Quota = 0
	}
	if utils.IsEmpty(p.BandWidthLimit) {
		p.BandWidthLimit = 0
	}
	if utils.IsEmpty(p.EnableEmail) {
		p.EnableEmail = false
	}
	if utils.IsEmpty(p.SlackWebhookUrl) {
		p.SlackWebhookUrl = ""
	}
	if utils.IsEmpty(p.AutoTrafficShaping) {
		p.AutoTrafficShaping = false
	}

}

func (p *TrafficControlUpdateMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := define.Resources["MobileGateway"].Commands["traffic-control-update"].Params["quota"].ValidateFunc
		errs := validator("--quota", p.Quota)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["traffic-control-update"].Params["band-width-limit"].ValidateFunc
		errs := validator("--band-width-limit", p.BandWidthLimit)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["traffic-control-update"].Params["slack-webhook-url"].ValidateFunc
		errs := validator("--slack-webhook-url", p.SlackWebhookUrl)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *TrafficControlUpdateMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *TrafficControlUpdateMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["traffic-control-update"]
}

func (p *TrafficControlUpdateMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *TrafficControlUpdateMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *TrafficControlUpdateMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *TrafficControlUpdateMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *TrafficControlUpdateMobileGatewayParam) SetQuota(v int) {
	p.Quota = v
}

func (p *TrafficControlUpdateMobileGatewayParam) GetQuota() int {
	return p.Quota
}
func (p *TrafficControlUpdateMobileGatewayParam) SetBandWidthLimit(v int) {
	p.BandWidthLimit = v
}

func (p *TrafficControlUpdateMobileGatewayParam) GetBandWidthLimit() int {
	return p.BandWidthLimit
}
func (p *TrafficControlUpdateMobileGatewayParam) SetEnableEmail(v bool) {
	p.EnableEmail = v
}

func (p *TrafficControlUpdateMobileGatewayParam) GetEnableEmail() bool {
	return p.EnableEmail
}
func (p *TrafficControlUpdateMobileGatewayParam) SetSlackWebhookUrl(v string) {
	p.SlackWebhookUrl = v
}

func (p *TrafficControlUpdateMobileGatewayParam) GetSlackWebhookUrl() string {
	return p.SlackWebhookUrl
}
func (p *TrafficControlUpdateMobileGatewayParam) SetAutoTrafficShaping(v bool) {
	p.AutoTrafficShaping = v
}

func (p *TrafficControlUpdateMobileGatewayParam) GetAutoTrafficShaping() bool {
	return p.AutoTrafficShaping
}

// TrafficControlDisableMobileGatewayParam is input parameters for the sacloud API
type TrafficControlDisableMobileGatewayParam struct {
	input Input
}

// NewTrafficControlDisableMobileGatewayParam return new TrafficControlDisableMobileGatewayParam
func NewTrafficControlDisableMobileGatewayParam() *TrafficControlDisableMobileGatewayParam {
	return &TrafficControlDisableMobileGatewayParam{}
}

// Initialize init TrafficControlDisableMobileGatewayParam
func (p *TrafficControlDisableMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *TrafficControlDisableMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *TrafficControlDisableMobileGatewayParam) fillValueToSkeleton() {

}

func (p *TrafficControlDisableMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *TrafficControlDisableMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *TrafficControlDisableMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["traffic-control-disable"]
}

func (p *TrafficControlDisableMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *TrafficControlDisableMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *TrafficControlDisableMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *TrafficControlDisableMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// StaticRouteInfoMobileGatewayParam is input parameters for the sacloud API
type StaticRouteInfoMobileGatewayParam struct {
	input Input
}

// NewStaticRouteInfoMobileGatewayParam return new StaticRouteInfoMobileGatewayParam
func NewStaticRouteInfoMobileGatewayParam() *StaticRouteInfoMobileGatewayParam {
	return &StaticRouteInfoMobileGatewayParam{}
}

// Initialize init StaticRouteInfoMobileGatewayParam
func (p *StaticRouteInfoMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *StaticRouteInfoMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *StaticRouteInfoMobileGatewayParam) fillValueToSkeleton() {

}

func (p *StaticRouteInfoMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *StaticRouteInfoMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *StaticRouteInfoMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["static-route-info"]
}

func (p *StaticRouteInfoMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *StaticRouteInfoMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *StaticRouteInfoMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *StaticRouteInfoMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// StaticRouteAddMobileGatewayParam is input parameters for the sacloud API
type StaticRouteAddMobileGatewayParam struct {
	Prefix  string
	NextHop string

	input Input
}

// NewStaticRouteAddMobileGatewayParam return new StaticRouteAddMobileGatewayParam
func NewStaticRouteAddMobileGatewayParam() *StaticRouteAddMobileGatewayParam {
	return &StaticRouteAddMobileGatewayParam{}
}

// Initialize init StaticRouteAddMobileGatewayParam
func (p *StaticRouteAddMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *StaticRouteAddMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *StaticRouteAddMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Prefix) {
		p.Prefix = ""
	}
	if utils.IsEmpty(p.NextHop) {
		p.NextHop = ""
	}

}

func (p *StaticRouteAddMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--prefix", p.Prefix)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["static-route-add"].Params["prefix"].ValidateFunc
		errs := validator("--prefix", p.Prefix)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := validateRequired
		errs := validator("--next-hop", p.NextHop)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["static-route-add"].Params["next-hop"].ValidateFunc
		errs := validator("--next-hop", p.NextHop)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *StaticRouteAddMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *StaticRouteAddMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["static-route-add"]
}

func (p *StaticRouteAddMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *StaticRouteAddMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *StaticRouteAddMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *StaticRouteAddMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *StaticRouteAddMobileGatewayParam) SetPrefix(v string) {
	p.Prefix = v
}

func (p *StaticRouteAddMobileGatewayParam) GetPrefix() string {
	return p.Prefix
}
func (p *StaticRouteAddMobileGatewayParam) SetNextHop(v string) {
	p.NextHop = v
}

func (p *StaticRouteAddMobileGatewayParam) GetNextHop() string {
	return p.NextHop
}

// StaticRouteUpdateMobileGatewayParam is input parameters for the sacloud API
type StaticRouteUpdateMobileGatewayParam struct {
	Index   int
	Prefix  string
	NextHop string

	input Input
}

// NewStaticRouteUpdateMobileGatewayParam return new StaticRouteUpdateMobileGatewayParam
func NewStaticRouteUpdateMobileGatewayParam() *StaticRouteUpdateMobileGatewayParam {
	return &StaticRouteUpdateMobileGatewayParam{}
}

// Initialize init StaticRouteUpdateMobileGatewayParam
func (p *StaticRouteUpdateMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *StaticRouteUpdateMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *StaticRouteUpdateMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Index) {
		p.Index = 0
	}
	if utils.IsEmpty(p.Prefix) {
		p.Prefix = ""
	}
	if utils.IsEmpty(p.NextHop) {
		p.NextHop = ""
	}

}

func (p *StaticRouteUpdateMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--index", p.Index)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["static-route-update"].Params["prefix"].ValidateFunc
		errs := validator("--prefix", p.Prefix)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["static-route-update"].Params["next-hop"].ValidateFunc
		errs := validator("--next-hop", p.NextHop)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *StaticRouteUpdateMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *StaticRouteUpdateMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["static-route-update"]
}

func (p *StaticRouteUpdateMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *StaticRouteUpdateMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *StaticRouteUpdateMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *StaticRouteUpdateMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *StaticRouteUpdateMobileGatewayParam) SetIndex(v int) {
	p.Index = v
}

func (p *StaticRouteUpdateMobileGatewayParam) GetIndex() int {
	return p.Index
}
func (p *StaticRouteUpdateMobileGatewayParam) SetPrefix(v string) {
	p.Prefix = v
}

func (p *StaticRouteUpdateMobileGatewayParam) GetPrefix() string {
	return p.Prefix
}
func (p *StaticRouteUpdateMobileGatewayParam) SetNextHop(v string) {
	p.NextHop = v
}

func (p *StaticRouteUpdateMobileGatewayParam) GetNextHop() string {
	return p.NextHop
}

// StaticRouteDeleteMobileGatewayParam is input parameters for the sacloud API
type StaticRouteDeleteMobileGatewayParam struct {
	Index int

	input Input
}

// NewStaticRouteDeleteMobileGatewayParam return new StaticRouteDeleteMobileGatewayParam
func NewStaticRouteDeleteMobileGatewayParam() *StaticRouteDeleteMobileGatewayParam {
	return &StaticRouteDeleteMobileGatewayParam{}
}

// Initialize init StaticRouteDeleteMobileGatewayParam
func (p *StaticRouteDeleteMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *StaticRouteDeleteMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *StaticRouteDeleteMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Index) {
		p.Index = 0
	}

}

func (p *StaticRouteDeleteMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--index", p.Index)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *StaticRouteDeleteMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *StaticRouteDeleteMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["static-route-delete"]
}

func (p *StaticRouteDeleteMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *StaticRouteDeleteMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *StaticRouteDeleteMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *StaticRouteDeleteMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *StaticRouteDeleteMobileGatewayParam) SetIndex(v int) {
	p.Index = v
}

func (p *StaticRouteDeleteMobileGatewayParam) GetIndex() int {
	return p.Index
}

// SIMInfoMobileGatewayParam is input parameters for the sacloud API
type SIMInfoMobileGatewayParam struct {
	input Input
}

// NewSIMInfoMobileGatewayParam return new SIMInfoMobileGatewayParam
func NewSIMInfoMobileGatewayParam() *SIMInfoMobileGatewayParam {
	return &SIMInfoMobileGatewayParam{}
}

// Initialize init SIMInfoMobileGatewayParam
func (p *SIMInfoMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *SIMInfoMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *SIMInfoMobileGatewayParam) fillValueToSkeleton() {

}

func (p *SIMInfoMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *SIMInfoMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SIMInfoMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["sim-info"]
}

func (p *SIMInfoMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *SIMInfoMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *SIMInfoMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *SIMInfoMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// SIMAddMobileGatewayParam is input parameters for the sacloud API
type SIMAddMobileGatewayParam struct {
	SIMId     sacloud.ID
	Ipaddress string

	input Input
}

// NewSIMAddMobileGatewayParam return new SIMAddMobileGatewayParam
func NewSIMAddMobileGatewayParam() *SIMAddMobileGatewayParam {
	return &SIMAddMobileGatewayParam{}
}

// Initialize init SIMAddMobileGatewayParam
func (p *SIMAddMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *SIMAddMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *SIMAddMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.SIMId) {
		p.SIMId = sacloud.ID(0)
	}
	if utils.IsEmpty(p.Ipaddress) {
		p.Ipaddress = ""
	}

}

func (p *SIMAddMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--sim-id", p.SIMId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-add"].Params["sim-id"].ValidateFunc
		errs := validator("--sim-id", p.SIMId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := validateRequired
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-add"].Params["ipaddress"].ValidateFunc
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *SIMAddMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SIMAddMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["sim-add"]
}

func (p *SIMAddMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *SIMAddMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *SIMAddMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *SIMAddMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *SIMAddMobileGatewayParam) SetSIMId(v sacloud.ID) {
	p.SIMId = v
}

func (p *SIMAddMobileGatewayParam) GetSIMId() sacloud.ID {
	return p.SIMId
}
func (p *SIMAddMobileGatewayParam) SetIpaddress(v string) {
	p.Ipaddress = v
}

func (p *SIMAddMobileGatewayParam) GetIpaddress() string {
	return p.Ipaddress
}

// SIMUpdateMobileGatewayParam is input parameters for the sacloud API
type SIMUpdateMobileGatewayParam struct {
	SIMId     sacloud.ID
	Ipaddress string

	input Input
}

// NewSIMUpdateMobileGatewayParam return new SIMUpdateMobileGatewayParam
func NewSIMUpdateMobileGatewayParam() *SIMUpdateMobileGatewayParam {
	return &SIMUpdateMobileGatewayParam{}
}

// Initialize init SIMUpdateMobileGatewayParam
func (p *SIMUpdateMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *SIMUpdateMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *SIMUpdateMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.SIMId) {
		p.SIMId = sacloud.ID(0)
	}
	if utils.IsEmpty(p.Ipaddress) {
		p.Ipaddress = ""
	}

}

func (p *SIMUpdateMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--sim-id", p.SIMId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-update"].Params["sim-id"].ValidateFunc
		errs := validator("--sim-id", p.SIMId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["sim-update"].Params["ipaddress"].ValidateFunc
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *SIMUpdateMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SIMUpdateMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["sim-update"]
}

func (p *SIMUpdateMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *SIMUpdateMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *SIMUpdateMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *SIMUpdateMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *SIMUpdateMobileGatewayParam) SetSIMId(v sacloud.ID) {
	p.SIMId = v
}

func (p *SIMUpdateMobileGatewayParam) GetSIMId() sacloud.ID {
	return p.SIMId
}
func (p *SIMUpdateMobileGatewayParam) SetIpaddress(v string) {
	p.Ipaddress = v
}

func (p *SIMUpdateMobileGatewayParam) GetIpaddress() string {
	return p.Ipaddress
}

// SIMDeleteMobileGatewayParam is input parameters for the sacloud API
type SIMDeleteMobileGatewayParam struct {
	SIMId sacloud.ID

	input Input
}

// NewSIMDeleteMobileGatewayParam return new SIMDeleteMobileGatewayParam
func NewSIMDeleteMobileGatewayParam() *SIMDeleteMobileGatewayParam {
	return &SIMDeleteMobileGatewayParam{}
}

// Initialize init SIMDeleteMobileGatewayParam
func (p *SIMDeleteMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *SIMDeleteMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *SIMDeleteMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.SIMId) {
		p.SIMId = sacloud.ID(0)
	}

}

func (p *SIMDeleteMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--sim-id", p.SIMId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-delete"].Params["sim-id"].ValidateFunc
		errs := validator("--sim-id", p.SIMId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *SIMDeleteMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SIMDeleteMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["sim-delete"]
}

func (p *SIMDeleteMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *SIMDeleteMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *SIMDeleteMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *SIMDeleteMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *SIMDeleteMobileGatewayParam) SetSIMId(v sacloud.ID) {
	p.SIMId = v
}

func (p *SIMDeleteMobileGatewayParam) GetSIMId() sacloud.ID {
	return p.SIMId
}

// SIMRouteInfoMobileGatewayParam is input parameters for the sacloud API
type SIMRouteInfoMobileGatewayParam struct {
	input Input
}

// NewSIMRouteInfoMobileGatewayParam return new SIMRouteInfoMobileGatewayParam
func NewSIMRouteInfoMobileGatewayParam() *SIMRouteInfoMobileGatewayParam {
	return &SIMRouteInfoMobileGatewayParam{}
}

// Initialize init SIMRouteInfoMobileGatewayParam
func (p *SIMRouteInfoMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *SIMRouteInfoMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *SIMRouteInfoMobileGatewayParam) fillValueToSkeleton() {

}

func (p *SIMRouteInfoMobileGatewayParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *SIMRouteInfoMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SIMRouteInfoMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["sim-route-info"]
}

func (p *SIMRouteInfoMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *SIMRouteInfoMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *SIMRouteInfoMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *SIMRouteInfoMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// SIMRouteAddMobileGatewayParam is input parameters for the sacloud API
type SIMRouteAddMobileGatewayParam struct {
	Prefix string
	SIM    sacloud.ID

	input Input
}

// NewSIMRouteAddMobileGatewayParam return new SIMRouteAddMobileGatewayParam
func NewSIMRouteAddMobileGatewayParam() *SIMRouteAddMobileGatewayParam {
	return &SIMRouteAddMobileGatewayParam{}
}

// Initialize init SIMRouteAddMobileGatewayParam
func (p *SIMRouteAddMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *SIMRouteAddMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *SIMRouteAddMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Prefix) {
		p.Prefix = ""
	}
	if utils.IsEmpty(p.SIM) {
		p.SIM = sacloud.ID(0)
	}

}

func (p *SIMRouteAddMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--prefix", p.Prefix)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-route-add"].Params["prefix"].ValidateFunc
		errs := validator("--prefix", p.Prefix)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := validateRequired
		errs := validator("--sim", p.SIM)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-route-add"].Params["sim"].ValidateFunc
		errs := validator("--sim", p.SIM)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *SIMRouteAddMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SIMRouteAddMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["sim-route-add"]
}

func (p *SIMRouteAddMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *SIMRouteAddMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *SIMRouteAddMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *SIMRouteAddMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *SIMRouteAddMobileGatewayParam) SetPrefix(v string) {
	p.Prefix = v
}

func (p *SIMRouteAddMobileGatewayParam) GetPrefix() string {
	return p.Prefix
}
func (p *SIMRouteAddMobileGatewayParam) SetSIM(v sacloud.ID) {
	p.SIM = v
}

func (p *SIMRouteAddMobileGatewayParam) GetSIM() sacloud.ID {
	return p.SIM
}

// SIMRouteUpdateMobileGatewayParam is input parameters for the sacloud API
type SIMRouteUpdateMobileGatewayParam struct {
	SIM    sacloud.ID
	Index  int
	Prefix string

	input Input
}

// NewSIMRouteUpdateMobileGatewayParam return new SIMRouteUpdateMobileGatewayParam
func NewSIMRouteUpdateMobileGatewayParam() *SIMRouteUpdateMobileGatewayParam {
	return &SIMRouteUpdateMobileGatewayParam{}
}

// Initialize init SIMRouteUpdateMobileGatewayParam
func (p *SIMRouteUpdateMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *SIMRouteUpdateMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *SIMRouteUpdateMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.SIM) {
		p.SIM = sacloud.ID(0)
	}
	if utils.IsEmpty(p.Index) {
		p.Index = 0
	}
	if utils.IsEmpty(p.Prefix) {
		p.Prefix = ""
	}

}

func (p *SIMRouteUpdateMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := define.Resources["MobileGateway"].Commands["sim-route-update"].Params["sim"].ValidateFunc
		errs := validator("--sim", p.SIM)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := validateRequired
		errs := validator("--index", p.Index)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["MobileGateway"].Commands["sim-route-update"].Params["prefix"].ValidateFunc
		errs := validator("--prefix", p.Prefix)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *SIMRouteUpdateMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SIMRouteUpdateMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["sim-route-update"]
}

func (p *SIMRouteUpdateMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *SIMRouteUpdateMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *SIMRouteUpdateMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *SIMRouteUpdateMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *SIMRouteUpdateMobileGatewayParam) SetSIM(v sacloud.ID) {
	p.SIM = v
}

func (p *SIMRouteUpdateMobileGatewayParam) GetSIM() sacloud.ID {
	return p.SIM
}
func (p *SIMRouteUpdateMobileGatewayParam) SetIndex(v int) {
	p.Index = v
}

func (p *SIMRouteUpdateMobileGatewayParam) GetIndex() int {
	return p.Index
}
func (p *SIMRouteUpdateMobileGatewayParam) SetPrefix(v string) {
	p.Prefix = v
}

func (p *SIMRouteUpdateMobileGatewayParam) GetPrefix() string {
	return p.Prefix
}

// SIMRouteDeleteMobileGatewayParam is input parameters for the sacloud API
type SIMRouteDeleteMobileGatewayParam struct {
	Index int

	input Input
}

// NewSIMRouteDeleteMobileGatewayParam return new SIMRouteDeleteMobileGatewayParam
func NewSIMRouteDeleteMobileGatewayParam() *SIMRouteDeleteMobileGatewayParam {
	return &SIMRouteDeleteMobileGatewayParam{}
}

// Initialize init SIMRouteDeleteMobileGatewayParam
func (p *SIMRouteDeleteMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *SIMRouteDeleteMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *SIMRouteDeleteMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Index) {
		p.Index = 0
	}

}

func (p *SIMRouteDeleteMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--index", p.Index)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *SIMRouteDeleteMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SIMRouteDeleteMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["sim-route-delete"]
}

func (p *SIMRouteDeleteMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *SIMRouteDeleteMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *SIMRouteDeleteMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *SIMRouteDeleteMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *SIMRouteDeleteMobileGatewayParam) SetIndex(v int) {
	p.Index = v
}

func (p *SIMRouteDeleteMobileGatewayParam) GetIndex() int {
	return p.Index
}

// DNSUpdateMobileGatewayParam is input parameters for the sacloud API
type DNSUpdateMobileGatewayParam struct {
	DNS1 string
	DNS2 string

	input Input
}

// NewDNSUpdateMobileGatewayParam return new DNSUpdateMobileGatewayParam
func NewDNSUpdateMobileGatewayParam() *DNSUpdateMobileGatewayParam {
	return &DNSUpdateMobileGatewayParam{}
}

// Initialize init DNSUpdateMobileGatewayParam
func (p *DNSUpdateMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *DNSUpdateMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *DNSUpdateMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.DNS1) {
		p.DNS1 = ""
	}
	if utils.IsEmpty(p.DNS2) {
		p.DNS2 = ""
	}

}

func (p *DNSUpdateMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--dns-1", p.DNS1)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["dns-update"].Params["dns1"].ValidateFunc
		errs := validator("--dns-1", p.DNS1)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := validateRequired
		errs := validator("--dns-2", p.DNS2)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["dns-update"].Params["dns2"].ValidateFunc
		errs := validator("--dns-2", p.DNS2)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *DNSUpdateMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *DNSUpdateMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["dns-update"]
}

func (p *DNSUpdateMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *DNSUpdateMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *DNSUpdateMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *DNSUpdateMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *DNSUpdateMobileGatewayParam) SetDNS1(v string) {
	p.DNS1 = v
}

func (p *DNSUpdateMobileGatewayParam) GetDNS1() string {
	return p.DNS1
}
func (p *DNSUpdateMobileGatewayParam) SetDNS2(v string) {
	p.DNS2 = v
}

func (p *DNSUpdateMobileGatewayParam) GetDNS2() string {
	return p.DNS2
}

// LogsMobileGatewayParam is input parameters for the sacloud API
type LogsMobileGatewayParam struct {
	Follow          bool
	RefreshInterval int64

	input Input
}

// NewLogsMobileGatewayParam return new LogsMobileGatewayParam
func NewLogsMobileGatewayParam() *LogsMobileGatewayParam {
	return &LogsMobileGatewayParam{
		RefreshInterval: 3}
}

// Initialize init LogsMobileGatewayParam
func (p *LogsMobileGatewayParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *LogsMobileGatewayParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *LogsMobileGatewayParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Follow) {
		p.Follow = false
	}
	if utils.IsEmpty(p.RefreshInterval) {
		p.RefreshInterval = 0
	}

}

func (p *LogsMobileGatewayParam) validate() error {
	var errors []error

	{
		validator := define.Resources["MobileGateway"].Commands["logs"].Params["refresh-interval"].ValidateFunc
		errs := validator("--refresh-interval", p.RefreshInterval)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *LogsMobileGatewayParam) ResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *LogsMobileGatewayParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["logs"]
}

func (p *LogsMobileGatewayParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *LogsMobileGatewayParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *LogsMobileGatewayParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *LogsMobileGatewayParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *LogsMobileGatewayParam) SetFollow(v bool) {
	p.Follow = v
}

func (p *LogsMobileGatewayParam) GetFollow() bool {
	return p.Follow
}
func (p *LogsMobileGatewayParam) SetRefreshInterval(v int64) {
	p.RefreshInterval = v
}

func (p *LogsMobileGatewayParam) GetRefreshInterval() int64 {
	return p.RefreshInterval
}
