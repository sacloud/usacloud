// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'github.com/sacloud/usacloud/tools/gen-input-models'; DO NOT EDIT

package params

import (
	"io"

	"github.com/sacloud/libsacloud/sacloud"
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/output"
	"github.com/sacloud/usacloud/pkg/utils"
	"github.com/sacloud/usacloud/pkg/validation"
	"github.com/sacloud/usacloud/schema"
)

// ListInterfaceParam is input parameters for the sacloud API
type ListInterfaceParam struct {
	Max  int
	Sort []string
	Name []string
	Id   []sacloud.ID
	From int

	input Input
}

// NewListInterfaceParam return new ListInterfaceParam
func NewListInterfaceParam() *ListInterfaceParam {
	return &ListInterfaceParam{}
}

// Initialize init ListInterfaceParam
func (p *ListInterfaceParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *ListInterfaceParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *ListInterfaceParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.Max) {
		p.Max = 0
	}
	if utils.IsEmpty(p.Sort) {
		p.Sort = []string{""}
	}
	if utils.IsEmpty(p.Name) {
		p.Name = []string{""}
	}
	if utils.IsEmpty(p.Id) {
		p.Id = []sacloud.ID{}
	}
	if utils.IsEmpty(p.From) {
		p.From = 0
	}

}

func (p *ListInterfaceParam) validate() error {
	var errors []error

	{
		errs := validation.ConflictsWith("--name", p.Name, map[string]interface{}{

			"--id": p.Id,
		})
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := define.Resources["Interface"].Commands["list"].Params["id"].ValidateFunc
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validation.ConflictsWith("--id", p.Id, map[string]interface{}{

			"--name": p.Name,
		})
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *ListInterfaceParam) ResourceDef() *schema.Resource {
	return define.Resources["Interface"]
}

func (p *ListInterfaceParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["list"]
}

func (p *ListInterfaceParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *ListInterfaceParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *ListInterfaceParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *ListInterfaceParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *ListInterfaceParam) SetMax(v int) {
	p.Max = v
}

func (p *ListInterfaceParam) GetMax() int {
	return p.Max
}
func (p *ListInterfaceParam) SetSort(v []string) {
	p.Sort = v
}

func (p *ListInterfaceParam) GetSort() []string {
	return p.Sort
}
func (p *ListInterfaceParam) SetName(v []string) {
	p.Name = v
}

func (p *ListInterfaceParam) GetName() []string {
	return p.Name
}
func (p *ListInterfaceParam) SetId(v []sacloud.ID) {
	p.Id = v
}

func (p *ListInterfaceParam) GetId() []sacloud.ID {
	return p.Id
}
func (p *ListInterfaceParam) SetFrom(v int) {
	p.From = v
}

func (p *ListInterfaceParam) GetFrom() int {
	return p.From
}

// PacketFilterConnectInterfaceParam is input parameters for the sacloud API
type PacketFilterConnectInterfaceParam struct {
	PacketFilterId sacloud.ID

	input Input
}

// NewPacketFilterConnectInterfaceParam return new PacketFilterConnectInterfaceParam
func NewPacketFilterConnectInterfaceParam() *PacketFilterConnectInterfaceParam {
	return &PacketFilterConnectInterfaceParam{}
}

// Initialize init PacketFilterConnectInterfaceParam
func (p *PacketFilterConnectInterfaceParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *PacketFilterConnectInterfaceParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *PacketFilterConnectInterfaceParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.PacketFilterId) {
		p.PacketFilterId = sacloud.ID(0)
	}

}

func (p *PacketFilterConnectInterfaceParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--packet-filter-id", p.PacketFilterId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["Interface"].Commands["packet-filter-connect"].Params["packet-filter-id"].ValidateFunc
		errs := validator("--packet-filter-id", p.PacketFilterId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *PacketFilterConnectInterfaceParam) ResourceDef() *schema.Resource {
	return define.Resources["Interface"]
}

func (p *PacketFilterConnectInterfaceParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["packet-filter-connect"]
}

func (p *PacketFilterConnectInterfaceParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *PacketFilterConnectInterfaceParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *PacketFilterConnectInterfaceParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *PacketFilterConnectInterfaceParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *PacketFilterConnectInterfaceParam) SetPacketFilterId(v sacloud.ID) {
	p.PacketFilterId = v
}

func (p *PacketFilterConnectInterfaceParam) GetPacketFilterId() sacloud.ID {
	return p.PacketFilterId
}

// CreateInterfaceParam is input parameters for the sacloud API
type CreateInterfaceParam struct {
	ServerId sacloud.ID

	input Input
}

// NewCreateInterfaceParam return new CreateInterfaceParam
func NewCreateInterfaceParam() *CreateInterfaceParam {
	return &CreateInterfaceParam{}
}

// Initialize init CreateInterfaceParam
func (p *CreateInterfaceParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *CreateInterfaceParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *CreateInterfaceParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.ServerId) {
		p.ServerId = sacloud.ID(0)
	}

}

func (p *CreateInterfaceParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--server-id", p.ServerId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["Interface"].Commands["create"].Params["server-id"].ValidateFunc
		errs := validator("--server-id", p.ServerId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *CreateInterfaceParam) ResourceDef() *schema.Resource {
	return define.Resources["Interface"]
}

func (p *CreateInterfaceParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["create"]
}

func (p *CreateInterfaceParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *CreateInterfaceParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *CreateInterfaceParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *CreateInterfaceParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *CreateInterfaceParam) SetServerId(v sacloud.ID) {
	p.ServerId = v
}

func (p *CreateInterfaceParam) GetServerId() sacloud.ID {
	return p.ServerId
}

// PacketFilterDisconnectInterfaceParam is input parameters for the sacloud API
type PacketFilterDisconnectInterfaceParam struct {
	PacketFilterId sacloud.ID

	input Input
}

// NewPacketFilterDisconnectInterfaceParam return new PacketFilterDisconnectInterfaceParam
func NewPacketFilterDisconnectInterfaceParam() *PacketFilterDisconnectInterfaceParam {
	return &PacketFilterDisconnectInterfaceParam{}
}

// Initialize init PacketFilterDisconnectInterfaceParam
func (p *PacketFilterDisconnectInterfaceParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *PacketFilterDisconnectInterfaceParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *PacketFilterDisconnectInterfaceParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.PacketFilterId) {
		p.PacketFilterId = sacloud.ID(0)
	}

}

func (p *PacketFilterDisconnectInterfaceParam) validate() error {
	var errors []error

	{
		validator := validateRequired
		errs := validator("--packet-filter-id", p.PacketFilterId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["Interface"].Commands["packet-filter-disconnect"].Params["packet-filter-id"].ValidateFunc
		errs := validator("--packet-filter-id", p.PacketFilterId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *PacketFilterDisconnectInterfaceParam) ResourceDef() *schema.Resource {
	return define.Resources["Interface"]
}

func (p *PacketFilterDisconnectInterfaceParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["packet-filter-disconnect"]
}

func (p *PacketFilterDisconnectInterfaceParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *PacketFilterDisconnectInterfaceParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *PacketFilterDisconnectInterfaceParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *PacketFilterDisconnectInterfaceParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *PacketFilterDisconnectInterfaceParam) SetPacketFilterId(v sacloud.ID) {
	p.PacketFilterId = v
}

func (p *PacketFilterDisconnectInterfaceParam) GetPacketFilterId() sacloud.ID {
	return p.PacketFilterId
}

// ReadInterfaceParam is input parameters for the sacloud API
type ReadInterfaceParam struct {
	input Input
}

// NewReadInterfaceParam return new ReadInterfaceParam
func NewReadInterfaceParam() *ReadInterfaceParam {
	return &ReadInterfaceParam{}
}

// Initialize init ReadInterfaceParam
func (p *ReadInterfaceParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *ReadInterfaceParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *ReadInterfaceParam) fillValueToSkeleton() {

}

func (p *ReadInterfaceParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *ReadInterfaceParam) ResourceDef() *schema.Resource {
	return define.Resources["Interface"]
}

func (p *ReadInterfaceParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["read"]
}

func (p *ReadInterfaceParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *ReadInterfaceParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *ReadInterfaceParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *ReadInterfaceParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

// UpdateInterfaceParam is input parameters for the sacloud API
type UpdateInterfaceParam struct {
	UserIpaddress string

	input Input
}

// NewUpdateInterfaceParam return new UpdateInterfaceParam
func NewUpdateInterfaceParam() *UpdateInterfaceParam {
	return &UpdateInterfaceParam{}
}

// Initialize init UpdateInterfaceParam
func (p *UpdateInterfaceParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *UpdateInterfaceParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *UpdateInterfaceParam) fillValueToSkeleton() {
	if utils.IsEmpty(p.UserIpaddress) {
		p.UserIpaddress = ""
	}

}

func (p *UpdateInterfaceParam) validate() error {
	var errors []error

	{
		validator := define.Resources["Interface"].Commands["update"].Params["user-ipaddress"].ValidateFunc
		errs := validator("--user-ipaddress", p.UserIpaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return utils.FlattenErrors(errors)
}

func (p *UpdateInterfaceParam) ResourceDef() *schema.Resource {
	return define.Resources["Interface"]
}

func (p *UpdateInterfaceParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["update"]
}

func (p *UpdateInterfaceParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *UpdateInterfaceParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *UpdateInterfaceParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *UpdateInterfaceParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}

func (p *UpdateInterfaceParam) SetUserIpaddress(v string) {
	p.UserIpaddress = v
}

func (p *UpdateInterfaceParam) GetUserIpaddress() string {
	return p.UserIpaddress
}

// DeleteInterfaceParam is input parameters for the sacloud API
type DeleteInterfaceParam struct {
	input Input
}

// NewDeleteInterfaceParam return new DeleteInterfaceParam
func NewDeleteInterfaceParam() *DeleteInterfaceParam {
	return &DeleteInterfaceParam{}
}

// Initialize init DeleteInterfaceParam
func (p *DeleteInterfaceParam) Initialize(in Input) error {
	p.input = in
	if err := p.validate(); err != nil {
		return err
	}
	return loadParameters(p)
}

// WriteSkeleton writes skeleton of JSON encoded parameters to specified writer
func (p *DeleteInterfaceParam) WriteSkeleton(writer io.Writer) error {
	return writeSkeleton(p, writer)
}

func (p *DeleteInterfaceParam) fillValueToSkeleton() {

}

func (p *DeleteInterfaceParam) validate() error {
	var errors []error

	return utils.FlattenErrors(errors)
}

func (p *DeleteInterfaceParam) ResourceDef() *schema.Resource {
	return define.Resources["Interface"]
}

func (p *DeleteInterfaceParam) CommandDef() *schema.Command {
	return p.ResourceDef().Commands["delete"]
}

func (p *DeleteInterfaceParam) IncludeFields() []string {
	return p.CommandDef().IncludeFields
}

func (p *DeleteInterfaceParam) ExcludeFields() []string {
	return p.CommandDef().ExcludeFields
}

func (p *DeleteInterfaceParam) TableType() output.TableType {
	return p.CommandDef().TableType
}

func (p *DeleteInterfaceParam) ColumnDefs() []output.ColumnDef {
	return p.CommandDef().TableColumnDefines
}
