// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"github.com/spf13/cobra"
)

// nfsCmd represents the nfs command
var nfsCmd = &cobra.Command{
	Use:   "nfs",
	Short: "A manage commands of NFS",
	Long:  `A manage commands of NFS`,
	Run: func(cmd *cobra.Command, args []string) {
		cmd.HelpFunc()(cmd, args)
	},
}

var nfsListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find", "selector"},
	Short:   "List Nfs",
	Long:    `List Nfs`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsCreateCmd = &cobra.Command{
	Use: "create",

	Short: "Create Nfs",
	Long:  `Create Nfs`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsReadCmd = &cobra.Command{
	Use: "read",

	Short: "Read Nfs",
	Long:  `Read Nfs`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsUpdateCmd = &cobra.Command{
	Use: "update",

	Short: "Update Nfs",
	Long:  `Update Nfs`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsDeleteCmd = &cobra.Command{
	Use:     "delete",
	Aliases: []string{"rm"},
	Short:   "Delete Nfs",
	Long:    `Delete Nfs`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsBootCmd = &cobra.Command{
	Use:     "boot",
	Aliases: []string{"power-on"},
	Short:   "Boot Nfs",
	Long:    `Boot Nfs`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsShutdownCmd = &cobra.Command{
	Use:     "shutdown",
	Aliases: []string{"power-off"},
	Short:   "Shutdown Nfs",
	Long:    `Shutdown Nfs`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsShutdownForceCmd = &cobra.Command{
	Use:     "shutdown-force",
	Aliases: []string{"stop"},
	Short:   "ShutdownForce Nfs",
	Long:    `ShutdownForce Nfs`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsResetCmd = &cobra.Command{
	Use: "reset",

	Short: "Reset Nfs",
	Long:  `Reset Nfs`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsWaitForBootCmd = &cobra.Command{
	Use: "wait-for-boot",

	Short: "Wait until boot is completed",
	Long:  `Wait until boot is completed`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsWaitForDownCmd = &cobra.Command{
	Use: "wait-for-down",

	Short: "Wait until shutdown is completed",
	Long:  `Wait until shutdown is completed`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsMonitorNicCmd = &cobra.Command{
	Use: "monitor-nic",

	Short: "Collect NIC(s) monitor values",
	Long:  `Collect NIC(s) monitor values`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var nfsMonitorFreeDiskSizeCmd = &cobra.Command{
	Use: "monitor-free-disk-size",

	Short: "Collect system-disk monitor values(IO)",
	Long:  `Collect system-disk monitor values(IO)`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

func init() {
	parent := nfsCmd
	parent.AddCommand(nfsListCmd)
	parent.AddCommand(nfsCreateCmd)
	parent.AddCommand(nfsReadCmd)
	parent.AddCommand(nfsUpdateCmd)
	parent.AddCommand(nfsDeleteCmd)
	parent.AddCommand(nfsBootCmd)
	parent.AddCommand(nfsShutdownCmd)
	parent.AddCommand(nfsShutdownForceCmd)
	parent.AddCommand(nfsResetCmd)
	parent.AddCommand(nfsWaitForBootCmd)
	parent.AddCommand(nfsWaitForDownCmd)
	parent.AddCommand(nfsMonitorNicCmd)
	parent.AddCommand(nfsMonitorFreeDiskSizeCmd)
	rootCmd.AddCommand(nfsCmd)
}
