// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"fmt"

	"github.com/sacloud/usacloud/cmdv2/params"
	"github.com/spf13/cobra"
)

// startupscriptCmd represents the startupscript command
var startupscriptCmd = &cobra.Command{
	Use:   "startup-script",
	Short: "A manage commands of StartupScript",
	Long:  `A manage commands of StartupScript`,
	Run: func(cmd *cobra.Command, args []string) {
		cmd.HelpFunc()(cmd, args)
	},
}

var startupscriptListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find", "selector"},
	Short:   "List Startupscript",
	Long:    `List Startupscript`,
	RunE: func(cmd *cobra.Command, args []string) error {
		listParam, err := params.NewListStartupscriptParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("list parameter: \n%s\n", debugMarshalIndent(listParam))
		return err
	},
}

var startupscriptCreateCmd = &cobra.Command{
	Use: "create",

	Short: "Create Startupscript",
	Long:  `Create Startupscript`,
	RunE: func(cmd *cobra.Command, args []string) error {
		createParam, err := params.NewCreateStartupscriptParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("create parameter: \n%s\n", debugMarshalIndent(createParam))
		return err
	},
}

var startupscriptReadCmd = &cobra.Command{
	Use: "read",

	Short: "Read Startupscript",
	Long:  `Read Startupscript`,
	RunE: func(cmd *cobra.Command, args []string) error {
		readParam, err := params.NewReadStartupscriptParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("read parameter: \n%s\n", debugMarshalIndent(readParam))
		return err
	},
}

var startupscriptUpdateCmd = &cobra.Command{
	Use: "update",

	Short: "Update Startupscript",
	Long:  `Update Startupscript`,
	RunE: func(cmd *cobra.Command, args []string) error {
		updateParam, err := params.NewUpdateStartupscriptParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("update parameter: \n%s\n", debugMarshalIndent(updateParam))
		return err
	},
}

var startupscriptDeleteCmd = &cobra.Command{
	Use:     "delete",
	Aliases: []string{"rm"},
	Short:   "Delete Startupscript",
	Long:    `Delete Startupscript`,
	RunE: func(cmd *cobra.Command, args []string) error {
		deleteParam, err := params.NewDeleteStartupscriptParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("delete parameter: \n%s\n", debugMarshalIndent(deleteParam))
		return err
	},
}

func init() {
	parent := startupscriptCmd
	parent.AddCommand(startupscriptListCmd)
	parent.AddCommand(startupscriptCreateCmd)
	parent.AddCommand(startupscriptReadCmd)
	parent.AddCommand(startupscriptUpdateCmd)
	parent.AddCommand(startupscriptDeleteCmd)
	rootCmd.AddCommand(startupscriptCmd)
}
