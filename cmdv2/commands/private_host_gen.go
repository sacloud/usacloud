// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"fmt"

	"github.com/sacloud/libsacloud/sacloud"
	"github.com/sacloud/usacloud/cmdv2/params"
	"github.com/spf13/cobra"
)

var (
	privatehostListParam         = params.NewListPrivatehostParam()
	privatehostCreateParam       = params.NewCreatePrivatehostParam()
	privatehostReadParam         = params.NewReadPrivatehostParam()
	privatehostUpdateParam       = params.NewUpdatePrivatehostParam()
	privatehostDeleteParam       = params.NewDeletePrivatehostParam()
	privatehostServerInfoParam   = params.NewServerInfoPrivatehostParam()
	privatehostServerAddParam    = params.NewServerAddPrivatehostParam()
	privatehostServerDeleteParam = params.NewServerDeletePrivatehostParam()
)

// privatehostCmd represents the command to manage SAKURAÂ Cloud PrivateHost
var privatehostCmd = &cobra.Command{
	Use:   "privatehost",
	Short: "A manage commands of PrivateHost",
	Long:  `A manage commands of PrivateHost`,
	Run: func(cmd *cobra.Command, args []string) {
		cmd.HelpFunc()(cmd, args)
	},
}

var privatehostListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find", "selector"},
	Short:   "List Privatehost",
	Long:    `List Privatehost`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := privatehostListParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("list parameter: \n%s\n", debugMarshalIndent(privatehostListParam))
		return err
	},
}

func privatehostListCmdInit() {
	fs := privatehostListCmd.Flags()
	fs.StringSliceVarP(&privatehostListParam.Name, "name", "", []string{}, "set filter by name(s)")
	fs.VarP(newIDSliceValue([]sacloud.ID{}, &privatehostListParam.Id), "id", "", "set filter by id(s)")
	fs.IntVarP(&privatehostListParam.From, "from", "", 0, "set offset")
	fs.IntVarP(&privatehostListParam.Max, "max", "", 0, "set limit")
	fs.StringSliceVarP(&privatehostListParam.Sort, "sort", "", []string{}, "set field(s) for sort")
	fs.StringSliceVarP(&privatehostListParam.Tags, "tags", "", []string{}, "set filter by tags(AND)")
}

var privatehostCreateCmd = &cobra.Command{
	Use: "create",

	Short: "Create Privatehost",
	Long:  `Create Privatehost`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := privatehostCreateParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("create parameter: \n%s\n", debugMarshalIndent(privatehostCreateParam))
		return err
	},
}

func privatehostCreateCmdInit() {
	fs := privatehostCreateCmd.Flags()
	fs.StringVarP(&privatehostCreateParam.Name, "name", "", "", "set resource display name")
	fs.StringVarP(&privatehostCreateParam.Description, "description", "", "", "set resource description")
	fs.StringSliceVarP(&privatehostCreateParam.Tags, "tags", "", []string{}, "set resource tags")
	fs.VarP(newIDValue(0, &privatehostCreateParam.IconId), "icon-id", "", "set Icon ID")
}

var privatehostReadCmd = &cobra.Command{
	Use: "read",

	Short: "Read Privatehost",
	Long:  `Read Privatehost`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := privatehostReadParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("read parameter: \n%s\n", debugMarshalIndent(privatehostReadParam))
		return err
	},
}

func privatehostReadCmdInit() {
}

var privatehostUpdateCmd = &cobra.Command{
	Use: "update",

	Short: "Update Privatehost",
	Long:  `Update Privatehost`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := privatehostUpdateParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("update parameter: \n%s\n", debugMarshalIndent(privatehostUpdateParam))
		return err
	},
}

func privatehostUpdateCmdInit() {
	fs := privatehostUpdateCmd.Flags()
	fs.StringVarP(&privatehostUpdateParam.Description, "description", "", "", "set resource description")
	fs.StringSliceVarP(&privatehostUpdateParam.Tags, "tags", "", []string{}, "set resource tags")
	fs.VarP(newIDValue(0, &privatehostUpdateParam.IconId), "icon-id", "", "set Icon ID")
	fs.StringVarP(&privatehostUpdateParam.Name, "name", "", "", "set resource display name")
}

var privatehostDeleteCmd = &cobra.Command{
	Use:     "delete",
	Aliases: []string{"rm"},
	Short:   "Delete Privatehost",
	Long:    `Delete Privatehost`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := privatehostDeleteParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("delete parameter: \n%s\n", debugMarshalIndent(privatehostDeleteParam))
		return err
	},
}

func privatehostDeleteCmdInit() {
}

var privatehostServerInfoCmd = &cobra.Command{
	Use:     "server-info",
	Aliases: []string{"server-list"},
	Short:   "ServerInfo Privatehost",
	Long:    `ServerInfo Privatehost`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := privatehostServerInfoParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("server-info parameter: \n%s\n", debugMarshalIndent(privatehostServerInfoParam))
		return err
	},
}

func privatehostServerInfoCmdInit() {
}

var privatehostServerAddCmd = &cobra.Command{
	Use: "server-add",

	Short: "ServerAdd Privatehost",
	Long:  `ServerAdd Privatehost`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := privatehostServerAddParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("server-add parameter: \n%s\n", debugMarshalIndent(privatehostServerAddParam))
		return err
	},
}

func privatehostServerAddCmdInit() {
	fs := privatehostServerAddCmd.Flags()
	fs.VarP(newIDValue(0, &privatehostServerAddParam.ServerId), "server-id", "", "set server ID")
}

var privatehostServerDeleteCmd = &cobra.Command{
	Use: "server-delete",

	Short: "ServerDelete Privatehost",
	Long:  `ServerDelete Privatehost`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := privatehostServerDeleteParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("server-delete parameter: \n%s\n", debugMarshalIndent(privatehostServerDeleteParam))
		return err
	},
}

func privatehostServerDeleteCmdInit() {
	fs := privatehostServerDeleteCmd.Flags()
	fs.VarP(newIDValue(0, &privatehostServerDeleteParam.ServerId), "server-id", "", "set server ID")
}

func init() {
	parent := privatehostCmd

	privatehostListCmdInit()
	parent.AddCommand(privatehostListCmd)

	privatehostCreateCmdInit()
	parent.AddCommand(privatehostCreateCmd)

	privatehostReadCmdInit()
	parent.AddCommand(privatehostReadCmd)

	privatehostUpdateCmdInit()
	parent.AddCommand(privatehostUpdateCmd)

	privatehostDeleteCmdInit()
	parent.AddCommand(privatehostDeleteCmd)

	privatehostServerInfoCmdInit()
	parent.AddCommand(privatehostServerInfoCmd)

	privatehostServerAddCmdInit()
	parent.AddCommand(privatehostServerAddCmd)

	privatehostServerDeleteCmdInit()
	parent.AddCommand(privatehostServerDeleteCmd)

	rootCmd.AddCommand(parent)
}
