// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"fmt"

	"github.com/sacloud/usacloud/cmdv2/params"
	"github.com/spf13/cobra"
)

// isoimageCmd represents the isoimage command
var isoimageCmd = &cobra.Command{
	Use:   "iso-image",
	Short: "A manage commands of ISOImage",
	Long:  `A manage commands of ISOImage`,
	Run: func(cmd *cobra.Command, args []string) {
		cmd.HelpFunc()(cmd, args)
	},
}

var isoimageListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find", "selector"},
	Short:   "List Isoimage",
	Long:    `List Isoimage`,
	RunE: func(cmd *cobra.Command, args []string) error {
		listParam, err := params.NewListIsoimageParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("list parameter: \n%s\n", debugMarshalIndent(listParam))
		return err
	},
}

var isoimageCreateCmd = &cobra.Command{
	Use: "create",

	Short: "Create Isoimage",
	Long:  `Create Isoimage`,
	RunE: func(cmd *cobra.Command, args []string) error {
		createParam, err := params.NewCreateIsoimageParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("create parameter: \n%s\n", debugMarshalIndent(createParam))
		return err
	},
}

var isoimageReadCmd = &cobra.Command{
	Use: "read",

	Short: "Read Isoimage",
	Long:  `Read Isoimage`,
	RunE: func(cmd *cobra.Command, args []string) error {
		readParam, err := params.NewReadIsoimageParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("read parameter: \n%s\n", debugMarshalIndent(readParam))
		return err
	},
}

var isoimageUpdateCmd = &cobra.Command{
	Use: "update",

	Short: "Update Isoimage",
	Long:  `Update Isoimage`,
	RunE: func(cmd *cobra.Command, args []string) error {
		updateParam, err := params.NewUpdateIsoimageParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("update parameter: \n%s\n", debugMarshalIndent(updateParam))
		return err
	},
}

var isoimageDeleteCmd = &cobra.Command{
	Use:     "delete",
	Aliases: []string{"rm"},
	Short:   "Delete Isoimage",
	Long:    `Delete Isoimage`,
	RunE: func(cmd *cobra.Command, args []string) error {
		deleteParam, err := params.NewDeleteIsoimageParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("delete parameter: \n%s\n", debugMarshalIndent(deleteParam))
		return err
	},
}

var isoimageUploadCmd = &cobra.Command{
	Use: "upload",

	Short: "Upload Isoimage",
	Long:  `Upload Isoimage`,
	RunE: func(cmd *cobra.Command, args []string) error {
		uploadParam, err := params.NewUploadIsoimageParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("upload parameter: \n%s\n", debugMarshalIndent(uploadParam))
		return err
	},
}

var isoimageDownloadCmd = &cobra.Command{
	Use: "download",

	Short: "Download Isoimage",
	Long:  `Download Isoimage`,
	RunE: func(cmd *cobra.Command, args []string) error {
		downloadParam, err := params.NewDownloadIsoimageParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("download parameter: \n%s\n", debugMarshalIndent(downloadParam))
		return err
	},
}

var isoimageFtpOpenCmd = &cobra.Command{
	Use: "ftp-open",

	Short: "FtpOpen Isoimage",
	Long:  `FtpOpen Isoimage`,
	RunE: func(cmd *cobra.Command, args []string) error {
		ftpOpenParam, err := params.NewFtpOpenIsoimageParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("ftp-open parameter: \n%s\n", debugMarshalIndent(ftpOpenParam))
		return err
	},
}

var isoimageFtpCloseCmd = &cobra.Command{
	Use: "ftp-close",

	Short: "FtpClose Isoimage",
	Long:  `FtpClose Isoimage`,
	RunE: func(cmd *cobra.Command, args []string) error {
		ftpCloseParam, err := params.NewFtpCloseIsoimageParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("ftp-close parameter: \n%s\n", debugMarshalIndent(ftpCloseParam))
		return err
	},
}

func init() {
	parent := isoimageCmd
	parent.AddCommand(isoimageListCmd)
	parent.AddCommand(isoimageCreateCmd)
	parent.AddCommand(isoimageReadCmd)
	parent.AddCommand(isoimageUpdateCmd)
	parent.AddCommand(isoimageDeleteCmd)
	parent.AddCommand(isoimageUploadCmd)
	parent.AddCommand(isoimageDownloadCmd)
	parent.AddCommand(isoimageFtpOpenCmd)
	parent.AddCommand(isoimageFtpCloseCmd)
	rootCmd.AddCommand(isoimageCmd)
}
