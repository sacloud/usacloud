// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"github.com/spf13/cobra"
)

// proxylbCmd represents the proxylb command
var proxylbCmd = &cobra.Command{
	Use:   "proxy-lb",
	Short: "A manage commands of ProxyLB",
	Long:  `A manage commands of ProxyLB`,
	Run: func(cmd *cobra.Command, args []string) {
		cmd.HelpFunc()(cmd, args)
	},
}

var proxylbListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find", "selector"},
	Short:   "List Proxylb",
	Long:    `List Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbCreateCmd = &cobra.Command{
	Use: "create",

	Short: "Create Proxylb",
	Long:  `Create Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbReadCmd = &cobra.Command{
	Use: "read",

	Short: "Read Proxylb",
	Long:  `Read Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbUpdateCmd = &cobra.Command{
	Use: "update",

	Short: "Update Proxylb",
	Long:  `Update Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbDeleteCmd = &cobra.Command{
	Use:     "delete",
	Aliases: []string{"rm"},
	Short:   "Delete Proxylb",
	Long:    `Delete Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbPlanChangeCmd = &cobra.Command{
	Use: "plan-change",

	Short: "Change ProxyLB plan",
	Long:  `Change ProxyLB plan`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbBindPortInfoCmd = &cobra.Command{
	Use:     "bind-port-info",
	Aliases: []string{"bind-port-list"},
	Short:   "BindPortInfo Proxylb",
	Long:    `BindPortInfo Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbBindPortAddCmd = &cobra.Command{
	Use: "bind-port-add",

	Short: "BindPortAdd Proxylb",
	Long:  `BindPortAdd Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbBindPortUpdateCmd = &cobra.Command{
	Use: "bind-port-update",

	Short: "BindPortUpdate Proxylb",
	Long:  `BindPortUpdate Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbBindPortDeleteCmd = &cobra.Command{
	Use: "bind-port-delete",

	Short: "BindPortDelete Proxylb",
	Long:  `BindPortDelete Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbResponseHeaderInfoCmd = &cobra.Command{
	Use:     "response-header-info",
	Aliases: []string{"response-header-list"},
	Short:   "ResponseHeaderInfo Proxylb",
	Long:    `ResponseHeaderInfo Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbResponseHeaderAddCmd = &cobra.Command{
	Use: "response-header-add",

	Short: "ResponseHeaderAdd Proxylb",
	Long:  `ResponseHeaderAdd Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbResponseHeaderUpdateCmd = &cobra.Command{
	Use: "response-header-update",

	Short: "ResponseHeaderUpdate Proxylb",
	Long:  `ResponseHeaderUpdate Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbResponseHeaderDeleteCmd = &cobra.Command{
	Use: "response-header-delete",

	Short: "ResponseHeaderDelete Proxylb",
	Long:  `ResponseHeaderDelete Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbAcmeInfoCmd = &cobra.Command{
	Use: "acme-info",

	Short: "AcmeInfo Proxylb",
	Long:  `AcmeInfo Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbAcmeSettingCmd = &cobra.Command{
	Use: "acme-setting",

	Short: "AcmeSetting Proxylb",
	Long:  `AcmeSetting Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbAcmeRenewCmd = &cobra.Command{
	Use: "acme-renew",

	Short: "AcmeRenew Proxylb",
	Long:  `AcmeRenew Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbServerInfoCmd = &cobra.Command{
	Use:     "server-info",
	Aliases: []string{"server-list"},
	Short:   "ServerInfo Proxylb",
	Long:    `ServerInfo Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbServerAddCmd = &cobra.Command{
	Use: "server-add",

	Short: "ServerAdd Proxylb",
	Long:  `ServerAdd Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbServerUpdateCmd = &cobra.Command{
	Use: "server-update",

	Short: "ServerUpdate Proxylb",
	Long:  `ServerUpdate Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbServerDeleteCmd = &cobra.Command{
	Use: "server-delete",

	Short: "ServerDelete Proxylb",
	Long:  `ServerDelete Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbCertificateInfoCmd = &cobra.Command{
	Use:     "certificate-info",
	Aliases: []string{"certificate-list", "cert-list", "cert-info"},
	Short:   "CertificateInfo Proxylb",
	Long:    `CertificateInfo Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbCertificateAddCmd = &cobra.Command{
	Use:     "certificate-add",
	Aliases: []string{"cert-add"},
	Short:   "CertificateAdd Proxylb",
	Long:    `CertificateAdd Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbCertificateUpdateCmd = &cobra.Command{
	Use:     "certificate-update",
	Aliases: []string{"cert-update"},
	Short:   "CertificateUpdate Proxylb",
	Long:    `CertificateUpdate Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbCertificateDeleteCmd = &cobra.Command{
	Use:     "certificate-delete",
	Aliases: []string{"cert-delete"},
	Short:   "CertificateDelete Proxylb",
	Long:    `CertificateDelete Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var proxylbMonitorCmd = &cobra.Command{
	Use: "monitor",

	Short: "Monitor Proxylb",
	Long:  `Monitor Proxylb`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

func init() {
	parent := proxylbCmd
	parent.AddCommand(proxylbListCmd)
	parent.AddCommand(proxylbCreateCmd)
	parent.AddCommand(proxylbReadCmd)
	parent.AddCommand(proxylbUpdateCmd)
	parent.AddCommand(proxylbDeleteCmd)
	parent.AddCommand(proxylbPlanChangeCmd)
	parent.AddCommand(proxylbBindPortInfoCmd)
	parent.AddCommand(proxylbBindPortAddCmd)
	parent.AddCommand(proxylbBindPortUpdateCmd)
	parent.AddCommand(proxylbBindPortDeleteCmd)
	parent.AddCommand(proxylbResponseHeaderInfoCmd)
	parent.AddCommand(proxylbResponseHeaderAddCmd)
	parent.AddCommand(proxylbResponseHeaderUpdateCmd)
	parent.AddCommand(proxylbResponseHeaderDeleteCmd)
	parent.AddCommand(proxylbAcmeInfoCmd)
	parent.AddCommand(proxylbAcmeSettingCmd)
	parent.AddCommand(proxylbAcmeRenewCmd)
	parent.AddCommand(proxylbServerInfoCmd)
	parent.AddCommand(proxylbServerAddCmd)
	parent.AddCommand(proxylbServerUpdateCmd)
	parent.AddCommand(proxylbServerDeleteCmd)
	parent.AddCommand(proxylbCertificateInfoCmd)
	parent.AddCommand(proxylbCertificateAddCmd)
	parent.AddCommand(proxylbCertificateUpdateCmd)
	parent.AddCommand(proxylbCertificateDeleteCmd)
	parent.AddCommand(proxylbMonitorCmd)
	rootCmd.AddCommand(proxylbCmd)
}
