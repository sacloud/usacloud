// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"fmt"

	"github.com/sacloud/usacloud/cmdv2/params"
	"github.com/spf13/cobra"
)

var (
	billCsvParam  = params.NewCsvBillParam()
	billListParam = params.NewListBillParam()
)

// billCmd represents the command to manage SAKURAÂ Cloud Bill
var billCmd = &cobra.Command{
	Use:   "bill",
	Short: "A manage commands of Bill",
	Long:  `A manage commands of Bill`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements: call list func as default
	},
}

var billCsvCmd = &cobra.Command{
	Use: "csv",

	Short: "Csv Bill",
	Long:  `Csv Bill`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := billCsvParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("csv parameter: \n%s\n", debugMarshalIndent(billCsvParam))
		return err
	},
}

func billCsvCmdInit() {
	fs := billCsvCmd.Flags()
	fs.VarP(newIDValue(0, &billCsvParam.BillId), "bill-id", "", "set bill ID")
	fs.BoolVarP(&billCsvParam.NoHeader, "no-header", "", false, "set output header flag")
	fs.StringVarP(&billCsvParam.BillOutput, "bill-output", "", "", "set bill-detail output path")
}

var billListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find"},
	Short:   "List Bill (default)",
	Long:    `List Bill (default)`,
	RunE: func(cmd *cobra.Command, args []string) error {
		err := billListParam.Initialize(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("list parameter: \n%s\n", debugMarshalIndent(billListParam))
		return err
	},
}

func billListCmdInit() {
	fs := billListCmd.Flags()
	fs.IntVarP(&billListParam.Month, "month", "", 0, "set month")
	fs.IntVarP(&billListParam.Year, "year", "", 0, "set year")
}

func init() {
	parent := billCmd

	billCsvCmdInit()
	parent.AddCommand(billCsvCmd)

	billListCmdInit()
	parent.AddCommand(billListCmd)

	rootCmd.AddCommand(parent)
}
