// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"fmt"

	"github.com/sacloud/usacloud/cmdv2/params"
	"github.com/spf13/cobra"
)

// licenseCmd represents the license command
var licenseCmd = &cobra.Command{
	Use:   "license",
	Short: "A manage commands of License",
	Long:  `A manage commands of License`,
	Run: func(cmd *cobra.Command, args []string) {
		cmd.HelpFunc()(cmd, args)
	},
}

var licenseListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find"},
	Short:   "List License",
	Long:    `List License`,
	RunE: func(cmd *cobra.Command, args []string) error {
		listParam, err := params.NewListLicenseParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("list parameter: \n%s\n", debugMarshalIndent(listParam))
		return err
	},
}

var licenseCreateCmd = &cobra.Command{
	Use: "create",

	Short: "Create License",
	Long:  `Create License`,
	RunE: func(cmd *cobra.Command, args []string) error {
		createParam, err := params.NewCreateLicenseParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("create parameter: \n%s\n", debugMarshalIndent(createParam))
		return err
	},
}

var licenseReadCmd = &cobra.Command{
	Use: "read",

	Short: "Read License",
	Long:  `Read License`,
	RunE: func(cmd *cobra.Command, args []string) error {
		readParam, err := params.NewReadLicenseParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("read parameter: \n%s\n", debugMarshalIndent(readParam))
		return err
	},
}

var licenseUpdateCmd = &cobra.Command{
	Use: "update",

	Short: "Update License",
	Long:  `Update License`,
	RunE: func(cmd *cobra.Command, args []string) error {
		updateParam, err := params.NewUpdateLicenseParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("update parameter: \n%s\n", debugMarshalIndent(updateParam))
		return err
	},
}

var licenseDeleteCmd = &cobra.Command{
	Use:     "delete",
	Aliases: []string{"rm"},
	Short:   "Delete License",
	Long:    `Delete License`,
	RunE: func(cmd *cobra.Command, args []string) error {
		deleteParam, err := params.NewDeleteLicenseParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("delete parameter: \n%s\n", debugMarshalIndent(deleteParam))
		return err
	},
}

func init() {
	parent := licenseCmd
	parent.AddCommand(licenseListCmd)
	parent.AddCommand(licenseCreateCmd)
	parent.AddCommand(licenseReadCmd)
	parent.AddCommand(licenseUpdateCmd)
	parent.AddCommand(licenseDeleteCmd)
	rootCmd.AddCommand(licenseCmd)
}
