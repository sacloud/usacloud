// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"fmt"

	"github.com/sacloud/usacloud/cmdv2/params"
	"github.com/spf13/cobra"
)

// productlicenseCmd represents the productlicense command
var productlicenseCmd = &cobra.Command{
	Use:   "product-license",
	Short: "A manage commands of ProductLicense",
	Long:  `A manage commands of ProductLicense`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements: call list func as default
	},
}

var productlicenseListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find"},
	Short:   "List Productlicense (default)",
	Long:    `List Productlicense (default)`,
	RunE: func(cmd *cobra.Command, args []string) error {
		listParam, err := params.NewListProductlicenseParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("list parameter: \n%s\n", debugMarshalIndent(listParam))
		return err
	},
}

var productlicenseReadCmd = &cobra.Command{
	Use: "read",

	Short: "Read Productlicense",
	Long:  `Read Productlicense`,
	RunE: func(cmd *cobra.Command, args []string) error {
		readParam, err := params.NewReadProductlicenseParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("read parameter: \n%s\n", debugMarshalIndent(readParam))
		return err
	},
}

func init() {
	parent := productlicenseCmd
	parent.AddCommand(productlicenseListCmd)
	parent.AddCommand(productlicenseReadCmd)
	rootCmd.AddCommand(productlicenseCmd)
}
