// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"fmt"

	"github.com/sacloud/usacloud/cmdv2/params"
	"github.com/spf13/cobra"
)

// autobackupCmd represents the autobackup command
var autobackupCmd = &cobra.Command{
	Use:   "auto-backup",
	Short: "A manage commands of AutoBackup",
	Long:  `A manage commands of AutoBackup`,
	Run: func(cmd *cobra.Command, args []string) {
		cmd.HelpFunc()(cmd, args)
	},
}

var autobackupListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find", "selector"},
	Short:   "List Autobackup",
	Long:    `List Autobackup`,
	RunE: func(cmd *cobra.Command, args []string) error {
		listParam, err := params.NewListAutobackupParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("list parameter: \n%s\n", debugMarshalIndent(listParam))
		return err
	},
}

var autobackupCreateCmd = &cobra.Command{
	Use: "create",

	Short: "Create Autobackup",
	Long:  `Create Autobackup`,
	RunE: func(cmd *cobra.Command, args []string) error {
		createParam, err := params.NewCreateAutobackupParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("create parameter: \n%s\n", debugMarshalIndent(createParam))
		return err
	},
}

var autobackupReadCmd = &cobra.Command{
	Use: "read",

	Short: "Read Autobackup",
	Long:  `Read Autobackup`,
	RunE: func(cmd *cobra.Command, args []string) error {
		readParam, err := params.NewReadAutobackupParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("read parameter: \n%s\n", debugMarshalIndent(readParam))
		return err
	},
}

var autobackupUpdateCmd = &cobra.Command{
	Use: "update",

	Short: "Update Autobackup",
	Long:  `Update Autobackup`,
	RunE: func(cmd *cobra.Command, args []string) error {
		updateParam, err := params.NewUpdateAutobackupParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("update parameter: \n%s\n", debugMarshalIndent(updateParam))
		return err
	},
}

var autobackupDeleteCmd = &cobra.Command{
	Use:     "delete",
	Aliases: []string{"rm"},
	Short:   "Delete Autobackup",
	Long:    `Delete Autobackup`,
	RunE: func(cmd *cobra.Command, args []string) error {
		deleteParam, err := params.NewDeleteAutobackupParam(newParamsAdapter(cmd.Flags()))
		// TODO DEBUG
		fmt.Printf("delete parameter: \n%s\n", debugMarshalIndent(deleteParam))
		return err
	},
}

func init() {
	parent := autobackupCmd
	parent.AddCommand(autobackupListCmd)
	parent.AddCommand(autobackupCreateCmd)
	parent.AddCommand(autobackupReadCmd)
	parent.AddCommand(autobackupUpdateCmd)
	parent.AddCommand(autobackupDeleteCmd)
	rootCmd.AddCommand(autobackupCmd)
}
