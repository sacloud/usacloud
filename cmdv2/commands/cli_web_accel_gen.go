// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-v2-commands'; DO NOT EDIT

package commands

import (
	"github.com/spf13/cobra"
)

// webaccelCmd represents the webaccel command
var webaccelCmd = &cobra.Command{
	Use:   "web-accel",
	Short: "A manage commands of WebAccel",
	Long:  `A manage commands of WebAccel`,
	Run: func(cmd *cobra.Command, args []string) {
		cmd.HelpFunc()(cmd, args)
	},
}

var webaccelListCmd = &cobra.Command{
	Use:     "list",
	Aliases: []string{"ls", "find", "selector"},
	Short:   "List Webaccel",
	Long:    `List Webaccel`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var webaccelReadCmd = &cobra.Command{
	Use: "read",

	Short: "Read Webaccel",
	Long:  `Read Webaccel`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var webaccelCertificateInfoCmd = &cobra.Command{
	Use:     "certificate-info",
	Aliases: []string{"cert-info"},
	Short:   "CertificateInfo Webaccel",
	Long:    `CertificateInfo Webaccel`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var webaccelCertificateNewCmd = &cobra.Command{
	Use:     "certificate-new",
	Aliases: []string{"cert-new", "cert-create", "certificate-create"},
	Short:   "CertificateNew Webaccel",
	Long:    `CertificateNew Webaccel`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var webaccelCertificateUpdateCmd = &cobra.Command{
	Use:     "certificate-update",
	Aliases: []string{"cert-update"},
	Short:   "CertificateUpdate Webaccel",
	Long:    `CertificateUpdate Webaccel`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

var webaccelDeleteCacheCmd = &cobra.Command{
	Use:     "delete-cache",
	Aliases: []string{"purge"},
	Short:   "DeleteCache Webaccel",
	Long:    `DeleteCache Webaccel`,
	Run: func(cmd *cobra.Command, args []string) {
		// TODO not implements
	},
}

func init() {
	parent := webaccelCmd
	parent.AddCommand(webaccelListCmd)
	parent.AddCommand(webaccelReadCmd)
	parent.AddCommand(webaccelCertificateInfoCmd)
	parent.AddCommand(webaccelCertificateNewCmd)
	parent.AddCommand(webaccelCertificateUpdateCmd)
	parent.AddCommand(webaccelDeleteCacheCmd)
	rootCmd.AddCommand(webaccelCmd)
}
