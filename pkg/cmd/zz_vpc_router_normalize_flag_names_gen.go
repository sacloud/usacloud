// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-normalize-flag-name'; DO NOT EDIT

package cmd

import (
	"github.com/spf13/pflag"
)

func vpcRouterListNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "selector":
		name = "tags"
	case "offset":
		name = "from"
	case "limit":
		name = "max"
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterCreateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "VRID":
		name = "vrid"
	case "ip1":
		name = "ipaddress-1"
	case "ip2":
		name = "ipaddress-2"
	case "desc":
		name = "description"
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterReadNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "desc":
		name = "description"
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterBootNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterShutdownNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterShutdownForceNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterResetNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterWaitForBootNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterWaitForDownNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterEnableInternetConnectionNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterDisableInternetConnectionNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterInterfaceInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterInterfaceConnectNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "ip":
		name = "ipaddress"
	case "vip":
		name = "ipaddress"
	case "ip1":
		name = "ipaddress-1"
	case "ip2":
		name = "ipaddress-2"
	case "network-masklen":
		name = "nw-masklen"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterInterfaceUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "ip":
		name = "ipaddress"
	case "vip":
		name = "ipaddress"
	case "ip1":
		name = "ipaddress-1"
	case "ip2":
		name = "ipaddress-2"
	case "network-masklen":
		name = "nw-masklen"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterInterfaceDisconnectNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterStaticNatInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterStaticNatAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "global-ip":
		name = "global"
	case "global-address":
		name = "global"
	case "private-ip":
		name = "private"
	case "private-address":
		name = "private"
	case "desc":
		name = "description"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterStaticNatUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "global-ip":
		name = "global"
	case "global-address":
		name = "global"
	case "private-ip":
		name = "private"
	case "private-address":
		name = "private"
	case "desc":
		name = "description"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterStaticNatDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterPortForwardingInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterPortForwardingAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "private-ip":
		name = "private-ipaddress"
	case "private-address":
		name = "private-ipaddress"
	case "desc":
		name = "description"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterPortForwardingUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "private-ip":
		name = "private-ipaddress"
	case "private-address":
		name = "private-ipaddress"
	case "desc":
		name = "description"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterPortForwardingDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterFirewallInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterFirewallAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "dest-network":
		name = "destination-network"
	case "dest-port":
		name = "destination-port"
	case "desc":
		name = "description"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterFirewallUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "dest-network":
		name = "destination-network"
	case "dest-port":
		name = "destination-port"
	case "desc":
		name = "description"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterFirewallDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterDhcpServerInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterDhcpServerAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "range-end":
		name = "range-stop"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterDhcpServerUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "range-end":
		name = "range-stop"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterDhcpServerDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterDhcpStaticMappingInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterDhcpStaticMappingAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "mac":
		name = "macaddress"
	case "ip":
		name = "ipaddress"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterDhcpStaticMappingUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "mac":
		name = "macaddress"
	case "ip":
		name = "ipaddress"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterDhcpStaticMappingDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterPptpServerInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterPptpServerUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "range-end":
		name = "range-stop"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterL2TPServerInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterL2TPServerUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "range-end":
		name = "range-stop"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterUserInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterUserAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "user":
		name = "username"
	case "pass":
		name = "password"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterUserUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "user":
		name = "username"
	case "pass":
		name = "password"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterUserDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterSiteToSiteVPNInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterSiteToSiteVPNAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterSiteToSiteVPNUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterSiteToSiteVPNDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterSiteToSiteVPNPeersNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterStaticRouteInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterStaticRouteAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterStaticRouteUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterStaticRouteDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func vpcRouterMonitorNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func vpcRouterLogsNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "name":
		name = "log-name"
	}
	return pflag.NormalizedName(name)
}
