// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-normalize-flag-name'; DO NOT EDIT

package cmd

import (
	"github.com/spf13/pflag"
)

func loadBalancerListNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "selector":
		name = "tags"
	case "offset":
		name = "from"
	case "limit":
		name = "max"
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerCreateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "VRID":
		name = "vrid"
	case "ha":
		name = "high-availability"
	case "ip1":
		name = "ipaddress-1"
	case "ip2":
		name = "ipaddress-2"
	case "desc":
		name = "description"
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerReadNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "desc":
		name = "description"
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerBootNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func loadBalancerShutdownNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func loadBalancerShutdownForceNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func loadBalancerResetNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func loadBalancerWaitForBootNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func loadBalancerWaitForDownNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func loadBalancerVipInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerVipAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "desc":
		name = "description"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerVipUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "desc":
		name = "description"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerVipDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func loadBalancerServerInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerServerAddNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "ip":
		name = "ipaddress"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerServerUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "ip":
		name = "ipaddress"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerServerDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "ip":
		name = "ipaddress"
	}
	return pflag.NormalizedName(name)
}

func loadBalancerMonitorNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}
