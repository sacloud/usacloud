// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-normalize-flag-name'; DO NOT EDIT

package cmd

import (
	"github.com/spf13/pflag"
)

func serverListNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "selector":
		name = "tags"
	case "offset":
		name = "from"
	case "limit":
		name = "max"
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverBuildNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "disable-pw-auth":
		name = "disable-password-auth"
	case "ip":
		name = "ipaddress"
	case "network-masklen":
		name = "nw-masklen"
	case "gateway":
		name = "default-route"
	case "notes":
		name = "startup-scripts"
	case "note-ids":
		name = "startup-script-ids"
	case "desc":
		name = "description"
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverReadNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverUpdateNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "desc":
		name = "description"
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverDeleteNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverPlanChangeNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverBootNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverShutdownNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverShutdownForceNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverResetNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverWaitForBootNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverWaitForDownNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverSSHNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverSSHExecNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverScpNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverVncNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverVncInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverVncSendNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverVncSnapshotNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverRemoteDesktopNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverRemoteDesktopInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverDiskInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverDiskConnectNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverDiskDisconnectNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverInterfaceInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverInterfaceAddForInternetNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverInterfaceAddForRouterNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "ip":
		name = "ipaddress"
	case "gateway":
		name = "default-route"
	case "network-masklen":
		name = "nw-masklen"
	}
	return pflag.NormalizedName(name)
}

func serverInterfaceAddForSwitchNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "ip":
		name = "ipaddress"
	case "gateway":
		name = "default-route"
	case "network-masklen":
		name = "nw-masklen"
	}
	return pflag.NormalizedName(name)
}

func serverInterfaceAddDisconnectedNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverISOInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverISOInsertNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "desc":
		name = "description"
	}
	return pflag.NormalizedName(name)
}

func serverISOEjectNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	return pflag.NormalizedName(name)
}

func serverMonitorCPUNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverMonitorNicNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverMonitorDiskNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}

func serverMaintenanceInfoNormalizeFlagNames(_ *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "out":
		name = "output-type"
	case "col":
		name = "column"
	case "fmt":
		name = "format"
	}
	return pflag.NormalizedName(name)
}
